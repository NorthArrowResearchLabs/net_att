{"version":3,"sources":["../../src/index.ts","../../src/api.ts","../../src/graphql.ts","../../src/schema.graphql.ts","Topbar.tsx","Topbar.style.ts","config.ts","ClickMarker.tsx","Map.tsx","App.mapbox.tsx","MarkerFields.tsx","App.tsx","App.style.ts","App.connect.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","alignItems","width","padding","spacing","textShadow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","logo","height","marginRight","programChooser","margin","color","palette","primary","contrastText","borderColor","transparent","background","text","search","position","borderRadius","shape","fade","common","white","marginLeft","flexGrow","breakpoints","up","searchIcon","pointerEvents","justifyContent","inputRoot","spacer","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","TopBar","title","classes","Fragment","AppBar","Toolbar","className","disableGutters","href","src","alt","Typography","variant","mapConfig","process","endpoints","REACT_APP_CDN","REACT_APP_BASEURL","REACT_APP_BASENAME","REACT_APP_DOMAIN","mandatoryEnv","REACT_APP_MAPBOX_TOKEN","REACT_APP_VERSION","REACT_APP_CONTACT_EMAIL","REACT_APP_GRAPHQL","Object","keys","forEach","keyname","log","error","REACT_APP_GA_TOKEN","redirectUrl","URL","window","location","origin","aws","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","oauth","domain","scope","redirectSignIn","toString","redirectSignOut","responseType","icon","zIndex","top","left","textAlign","transformOrigin","transform","ClickMarker","latLng","Icon","align","styleTweaks","Error","longitude","latitude","style","Map","vectorTiles","clickMarker","upstreamPoly","handleMapClick","useState","baseLayer","setBaseLayer","mapBoxRef","useRef","curZoomRef","finalStyle","useMemo","combineStyles","MapStyles","info","sources","reduce","acc","vkey","vlayer","sourceName","url","minZoom","maxZoom","bounds","layers","NHDFlowline","mapStyle","lineSource","intLngLat","type","properties","percentile","geometry","coordinates","lngLat","upstreamPolySource","mapBoxToken","reactMapGLProps","clickRadius","onClick","showMe","viewport","zoom","onViewportChange","size","projection","map","current","console","mapStyles","loading","NotListedLocationIcon","RoomIcon","GpsFixedIcon","data","id","paint","controlPadding","currStyle","setCurrStyle","idx","IGNORE_FIELDS","IDS","overflow","userSelect","table","flexDirection","tableHead","flex","tableBody","border","tableCell","MarkerFields","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","filter","k","indexOf","key","replace","val","undefined","util","isNumeric","numeral","format","formatNum","dataPrint","appFrame","parentContainer","mapContainer","drawerContainer","wordWrap","maxWidth","App","topbar","Topbar","fullWidth","noScroll","jsonData","AppConnect","history","setLoading","setVectorTiles","setClickMarker","setUpstreamPoly","currClickMarkerRef","useHosted","isAuthenticated","getCurrentToken","isAuthComplete","signIn","signOut","user","useEffect","fetch","then","res","json","d","JSON","parse","center","parseInt","minzoom","maxzoom","debug","catch","err","MapboxObj","jwt","api","apiCall","graphql","queries","geoRecord","cpLinePt","cp_line_pt","geom","pt","newPt","match","slice","parseFloat","mbRef","lineColor","getLayer","getPaintProperty","nhdplusid","setPaintProperty","startLoad","Date","now","upstreamCatchment","response","e","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","require","devSetup","ReactDOM","render","basename","path","AppContainer","document","getElementById","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5944e753.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.api = __importStar(require(\"./api\"));\nexports.graphql = __importStar(require(\"./graphql\"));\nvar schema_graphql_1 = require(\"./schema.graphql\");\nObject.defineProperty(exports, \"typeDefs\", { enumerable: true, get: function () { return schema_graphql_1.default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authCheck = exports.apiCall = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar graphql_1 = require(\"graphql\");\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nexports.apiCall = function (url, jwt, query, variables) {\n    return axios_1.default({\n        url: url,\n        method: 'post',\n        headers: jwt\n            ? {\n                authorization: \"Bearer \" + jwt\n            }\n            : null,\n        data: {\n            query: graphql_1.print(query),\n            variables: variables\n        }\n    })\n        .then(function (_a) {\n        var axiosData = _a.data;\n        return axiosData;\n    })\n        .catch(function (err) {\n        if (err.response && err.response.status === 404) {\n            throw new Error(\"API Url not found: \" + url);\n        }\n        else if (err.code && err.code === 'ECONNREFUSED') {\n            throw new Error(\"Connection refused. Could not contact: '\" + url + \"'\");\n        }\n        else {\n            loglevel_1.default.error({ url: url, jwt: jwt, query: graphql_1.print(query), variables: variables });\n            throw err;\n        }\n    });\n};\nfunction authCheck(url, jwt) {\n    return exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                }\\n            }\\n        \"], [\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                }\\n            }\\n        \"]))), {});\n}\nexports.authCheck = authCheck;\nvar templateObject_1;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.queries = exports.fragments = void 0;\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.fragments = {\n    record: graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        fragment recordFragment on Record {\\n            id\\n            ds\\n            data\\n            __typename\\n        }\\n    \"], [\"\\n        fragment recordFragment on Record {\\n            id\\n            ds\\n            data\\n            __typename\\n        }\\n    \"])))\n};\nexports.queries = {\n    geoRecord: graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n        query geoRecord($lngLat: [Float]!) {\\n            geoRecord(lngLat: $lngLat) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query geoRecord($lngLat: [Float]!) {\\n            geoRecord(lngLat: $lngLat) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    geoRecordEPSG: graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n        query geoRecordEPSG($lngLat: [Float]!, $epsg: Int!) {\\n            geoRecordEPSG(lngLat: $lngLat, epsg: $epsg) {\\n                ...seriesSummaryFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query geoRecordEPSG($lngLat: [Float]!, $epsg: Int!) {\\n            geoRecordEPSG(lngLat: $lngLat, epsg: $epsg) {\\n                ...seriesSummaryFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    upstreamCatchment: graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n        query upstreamCatchment($id: ID!) {\\n            upstreamCatchment(id: $id)\\n        }\\n    \"], [\"\\n        query upstreamCatchment($id: ID!) {\\n            upstreamCatchment(id: $id)\\n        }\\n    \"])))\n};\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n//# sourceMappingURL=graphql.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar typeDefs = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        # mutation: Mutation\\n    }\\n\\n    type Query {\\n        auth: AuthParams\\n\\n        geoRecord(lngLat: [Float]!): [Record]\\n        geoRecordEPSG(lngLat: [Float]!, epsg: Int!): [Record]\\n        upstreamCatchment(id: ID!): String\\n        recordGeometry(id: ID!): RecordGeometry\\n\\n        record(id: ID!, ds: [String]): [Record]\\n        records(ids: [ID]!, ds: [String]): [RecordSet]\\n    }\\n\\n    # this schema allows the following mutation:\\n    # type Mutation {\\n    # signal a deletion of a record\\n    # insertRecords(id: [ID]!, ds: String!): [Record]!\\n    # deleteRecords(id: [ID]!, ds: String!): [ID]!\\n    # wipeDS(ds: String!): String\\n    # }\\n\\n    type RecordGeometry {\\n        reach: String\\n        catchment: String\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n    }\\n\\n    type RecordSet {\\n        id: ID!\\n        records: [Record]\\n    }\\n\\n    type Record {\\n        id: ID!\\n        ds: String\\n        data: String\\n    }\\n\"], [\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        # mutation: Mutation\\n    }\\n\\n    type Query {\\n        auth: AuthParams\\n\\n        geoRecord(lngLat: [Float]!): [Record]\\n        geoRecordEPSG(lngLat: [Float]!, epsg: Int!): [Record]\\n        upstreamCatchment(id: ID!): String\\n        recordGeometry(id: ID!): RecordGeometry\\n\\n        record(id: ID!, ds: [String]): [Record]\\n        records(ids: [ID]!, ds: [String]): [RecordSet]\\n    }\\n\\n    # this schema allows the following mutation:\\n    # type Mutation {\\n    # signal a deletion of a record\\n    # insertRecords(id: [ID]!, ds: String!): [Record]!\\n    # deleteRecords(id: [ID]!, ds: String!): [ID]!\\n    # wipeDS(ds: String!): String\\n    # }\\n\\n    type RecordGeometry {\\n        reach: String\\n        catchment: String\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n    }\\n\\n    type RecordSet {\\n        id: ID!\\n        records: [Record]\\n    }\\n\\n    type Record {\\n        id: ID!\\n        ds: String\\n        data: String\\n    }\\n\"])));\nexports.default = typeDefs;\nvar templateObject_1;\n//# sourceMappingURL=schema.graphql.js.map","import React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\n\n// import MenuIcon from '@material-ui/core/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\nimport style from './Topbar.style'\n\nconst useStyles = makeStyles(style)\n\ninterface Props {\n    title: string\n}\n\nconst TopBar: React.FC<Props> = ({ title }: Props) => {\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.root} disableGutters>\n                    <a href=\"http://riverscapes.xyz/\">\n                        <img\n                            className={classes.logo}\n                            src={'https://riverscapes.xyz/assets/images/RiverscapesLogo.png'}\n                            alt=\"logo\"\n                        />\n                    </a>\n                    <Typography variant=\"subtitle1\">{title}</Typography>\n                    <div className={classes.spacer} />\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default TopBar\n","import { Theme, StyleRules } from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        padding: theme.spacing(0, 1),\n        textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n        backgroundImage: `url(https://northarrowresearchlabs.github.io/riverscapes/HeaderBackground.png)`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: '0% 50%',\n        backgroundSize: 'cover',\n        backgroundColor: '#444444'\n    },\n    logo: {\n        height: 40,\n        width: 40,\n        marginRight: theme.spacing(2)\n    },\n    programChooser: {\n        margin: theme.spacing(0, 1),\n        color: theme.palette.primary.contrastText,\n        '& svg': {\n            color: theme.palette.primary.contrastText\n        },\n        '&:before': {\n            borderColor: theme.palette.primary.contrastText\n        },\n        '&:after': {\n            borderColor: theme.palette.primary.contrastText\n        }\n    },\n    transparent: {\n        backgroundColor: 'transparent',\n        background: 'none',\n        color: theme.palette.text.primary\n        // borderBottom: `2px transparent`\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto'\n        }\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputRoot: {\n        color: 'inherit'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 200\n        }\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'flex',\n            flexGrow: 1\n        }\n    },\n    sectionMobile: {\n        display: 'flex',\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none'\n        }\n    }\n})\n","import log from 'loglevel'\n\nexport default {\n    // Bright Pastel\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n}\n\nexport const mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n}\n\nexport const endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n}\nexport const isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development'\n\nconst baseurl = process.env.REACT_APP_BASEURL\nlet basename = process.env.REACT_APP_BASENAME\nlet domain = process.env.REACT_APP_DOMAIN\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n    domain = 'localhost'\n    basename = ''\n}\n\n// We throw on necessary environment variables being missing\nconst mandatoryEnv = {\n    REACT_APP_MAPBOX_TOKEN: process.env.REACT_APP_MAPBOX_TOKEN,\n    REACT_APP_VERSION: process.env.REACT_APP_VERSION,\n    REACT_APP_CONTACT_EMAIL: process.env.REACT_APP_CONTACT_EMAIL,\n    REACT_APP_GRAPHQL: process.env.REACT_APP_GRAPHQL\n    // REACT_APP_AWS_REGION: process.env.REACT_APP_AWS_REGION,\n    // REACT_APP_COGNITO_USER_POOL_ID: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n    // REACT_APP_COGNITO_CLIENT_ID: process.env.REACT_APP_COGNITO_CLIENT_ID\n}\n\nObject.keys(mandatoryEnv).forEach((keyname) => {\n    if (!mandatoryEnv[keyname]) {\n        log.error(`You must set environment variable: ${keyname}`)\n    }\n})\n\nexport const version = process.env.REACT_APP_VERSION || 'NO_VERSION'\nexport const contact = process.env.REACT_APP_CONTACT_EMAIL || 'NO_CONTACT'\n\nexport const analytics = {\n    token: process.env.REACT_APP_GA_TOKEN || 'UA-XXXXXXXX-XX'\n}\n\nconst redirectUrl = new URL(process.env.PUBLIC_URL + '/', window.location.origin)\n\nexport const aws = {\n    Auth: {\n        // REQUIRED - Amazon Cognito Identity Pool ID\n        // identityPoolId: process.env.REACT_APP_COGNITO_IDPOOLID, // XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab\n        // REQUIRED - Amazon Cognito Region\n        region: process.env.REACT_APP_AWS_REGION,\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n        // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n        userPoolWebClientId: process.env.REACT_APP_COGNITO_CLIENT_ID,\n        // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl.toString(),\n            redirectSignOut: redirectUrl.toString(),\n            responseType: 'code'\n        }\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { Marker } from 'react-map-gl'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // border: '1px solid red'\n  },\n  icon: {\n    zIndex: 100,\n    width: 20,\n    height: 20,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    textAlign: 'center',\n    transformOrigin: '50% 50%',\n    transform: 'translateY(-50%) translateX(-50%)'\n  }\n}))\n\nconst ClickMarker = ({ latLng, Icon, align }) => {\n  const classes = useStyles()\n  const styleTweaks: any = {}\n  if (align) {\n    switch (align[0]) {\n      case 'bottom':\n        styleTweaks.transform = 'translateY(-100%)'\n        break\n      case 'top':\n        styleTweaks.transform = 'translateY(0%)'\n        break\n      case 'center':\n        styleTweaks.transform = 'translateY(-50%)'\n        break\n      default:\n        throw new Error('Must specify vertical placement of align')\n    }\n    switch (align[1]) {\n      case 'left':\n        styleTweaks.transform += ' translateX(0%)'\n        break\n      case 'right':\n        styleTweaks.transform += ' translateX(-100%)'\n        break\n      case 'center':\n        styleTweaks.transform += ' translateX(-50%)'\n        break\n      default:\n        throw new Error('Must specify horizontal placement of align')\n    }\n  }\n  return (\n    <Marker\n      className={classes.root}\n      longitude={latLng[0]}\n      latitude={latLng[1]}\n    >\n      <div className={classes.root}>\n        <Icon className={classes.icon} style={styleTweaks} />\n      </div>\n    </Marker>\n  )\n}\n\nClickMarker.propTypes = {\n  latLng: PropTypes.arrayOf(PropTypes.number).isRequired,\n  Icon: PropTypes.object.isRequired,\n  align: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ClickMarker\n","import React, { useState, useMemo, useRef } from 'react'\n\nimport { BaseMap, StyleButtons, MapStyles, combineStyles } from '@northarrowresearch/react-maps'\nimport { mapConfig } from './config'\n\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation'\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed'\nimport RoomIcon from '@material-ui/icons/Room'\nimport ClickMarker from './ClickMarker'\n// import log from 'loglevel'\nimport { Source, Layer } from 'react-map-gl'\n\nimport mapStyle from './App.mapbox'\nimport { ClickMarkerType } from './types'\n\ninterface MapProps {\n    vectorTiles?: any\n    clickMarker?: ClickMarkerType\n    upstreamPoly?: any\n    handleMapClick: (e: any, MapboxObj: any) => void\n}\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst Map: React.FC<MapProps> = ({ vectorTiles, clickMarker, upstreamPoly, handleMapClick }: MapProps) => {\n    const [baseLayer, setBaseLayer] = useState<number>(0)\n    const mapBoxRef = useRef()\n    const curZoomRef = useRef()\n\n    const finalStyle = useMemo(() => {\n        if (!vectorTiles) return null\n        return combineStyles(MapStyles[baseLayer].style, mapStyle(vectorTiles))\n    }, [baseLayer, vectorTiles])\n\n    const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }) => {\n        if (!mapBoxRef.current) mapBoxRef.current = map\n        curZoomRef.current = zoom\n        console.log('zoom', latitude, longitude, zoom)\n    }\n\n    const lineSource =\n        clickMarker && clickMarker.intLngLat\n            ? {\n                  type: 'Feature',\n                  properties: { percentile: 0 },\n                  geometry: {\n                      type: 'LineString',\n                      coordinates: [clickMarker.lngLat, clickMarker.intLngLat]\n                  }\n              }\n            : null\n    const upstreamPolySource = upstreamPoly\n        ? {\n              type: 'Feature',\n              properties: {},\n              geometry: upstreamPoly\n          }\n        : null\n\n    return (\n        <BaseMap\n            mapBoxToken={mapConfig.mapBoxToken}\n            // lockToBounds\n            reactMapGLProps={{\n                clickRadius: 2,\n                maxZoom: 14,\n                minZoom: 6,\n                onClick: handleMapClick\n            }}\n            bounds={vectorTiles.NHDFlowline.bounds}\n            showMe\n            viewport={{\n                zoom: vectorTiles.NHDFlowline.zoom || 12,\n                latitude: 44.2983897312401,\n                longitude: -114.374749399575\n                // latitude: vectorTiles.NHDFlowline.latitude,\n                // longitude: vectorTiles.NHDFlowline.longitude\n            }}\n            onViewportChange={onViewportChange}\n            mapStyles={[{ style: finalStyle }]}\n        >\n            {clickMarker && (\n                <ClickMarker\n                    latLng={clickMarker.lngLat}\n                    Icon={clickMarker.loading ? NotListedLocationIcon : RoomIcon}\n                    align={['bottom', 'center']}\n                />\n            )}\n            {clickMarker && clickMarker.intLngLat && <ClickMarker latLng={clickMarker.intLngLat} Icon={GpsFixedIcon} />}\n            {lineSource && (\n                <Source type=\"geojson\" data={lineSource}>\n                    <Layer\n                        {...{\n                            id: 'data',\n                            type: 'line',\n                            paint: {\n                                'line-color': '#FF0090',\n                                'line-opacity': 1,\n                                'line-width': 3\n                            }\n                        }}\n                    />\n                </Source>\n            )}\n            {upstreamPolySource && (\n                <Source type=\"geojson\" data={upstreamPolySource}>\n                    <Layer\n                        {...{\n                            id: 'upstream_fill',\n                            type: 'fill',\n                            paint: {\n                                'fill-opacity': ['interpolate', ['linear'], ['zoom'], 6, 0.2, 14, 0.2],\n                                'fill-color': '#9933ff'\n                            }\n                        }}\n                    />\n                </Source>\n            )}\n            {upstreamPolySource && (\n                <Source type=\"geojson\" data={upstreamPolySource}>\n                    <Layer\n                        {...{\n                            id: 'upstream_line',\n                            type: 'line',\n                            paint: {\n                                'line-color': '#9933ff',\n                                'line-opacity': 1,\n                                'line-width': 3\n                            }\n                        }}\n                    />\n                </Source>\n            )}\n            <StyleButtons\n                controlPadding={{}}\n                currStyle={baseLayer as number}\n                mapStyles={MapStyles}\n                setCurrStyle={(idx?: number): void => setBaseLayer(idx as number)}\n            />\n        </BaseMap>\n    )\n}\n\nexport default Map\n","import log from 'loglevel'\n\nexport default (vectorTiles) => {\n  log.info('VECTORTILES', vectorTiles)\n  const sources = Object.keys(vectorTiles).reduce((acc, vkey) => {\n    const vlayer = vectorTiles[vkey]\n    return {\n      ...acc,\n      [vlayer.sourceName]: {\n        'tiles': [vlayer.url],\n        'type': 'vector',\n        'minzoom': vlayer.minZoom,\n        'maxzoom': vlayer.maxZoom,\n        'bounds': vlayer.bounds\n      }\n    }\n  }, {})\n\n  const layers = [{\n    'id': 'NHDFlowlines_lines',\n    'type': 'line',\n    'source': vectorTiles.NHDFlowline.sourceName,\n    'source-layer': 'NHDFlowlines',\n    'minzoom': vectorTiles.NHDFlowline.minZoom,\n    'maxzoom': 14.5,\n    'layout': { 'visibility': 'visible' },\n    'paint': {\n      'line-opacity': [\n        'interpolate',\n        ['linear'],\n        ['zoom'],\n        vectorTiles.NHDFlowline.minZoom, 0,\n        8, 1\n      ],\n      'line-width': [\n        'interpolate',\n        ['linear'],\n        ['zoom'],\n        vectorTiles.NHDFlowline.minZoom, 0.5,\n        14, 4\n      ],\n      'line-color': [\n        'match',\n        ['get', 'NHDPlusID'],\n        [-1],\n        '#FFFF00',\n        [\n          'step', ['get', 'FType'],\n          '#FF0000',\n          460, '#0000FF'\n        ]\n      ]\n    }\n  }]\n  return {\n    'version': 8,\n    'name': 'Outdoors',\n    'metadata': {\n      'mapbox:type': 'default',\n      'mapbox:origin': 'outdoors-v11',\n      'mapbox:autocomposite': true,\n      'mapbox:groups': {},\n      'mapbox:sdk-support': { 'js': '0.50.0', 'android': '6.7.0', 'ios': '4.6.0' }\n    },\n    // 'center': [ -114.19115411710368, 43.32991248939766 ],\n    // 'zoom': 9.061958904803715,\n    // 'bearing': 0,\n    // 'pitch': 0,\n    'sources': { ...sources },\n    'sprite': 'mapbox://sprites/pipbailey/cjvfq2uwm0vqk1foby0dtwdmk/ayuihl2d38ufkjhmu0pwx0cto',\n    'glyphs': 'mapbox://fonts/pipbailey/{fontstack}/{range}.pbf',\n    'layers': [...layers],\n    'created': '2019-05-08T21:16:06.811Z',\n    'id': 'cjvfq2uwm0vqk1foby0dtwdmk',\n    'modified': '2019-05-08T22:02:34.939Z',\n    'owner': 'pipbailey',\n    'visibility': 'private',\n    'draft': false\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\n// import Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { util } from '@northarrowresearch/common'\nimport numeral from 'numeral'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\n\nconst IGNORE_FIELDS = ['ogc_fid', 'enabled', 'wbarea_permanent_identifier', 'visibilityfilter', 'gnis_id', 'gnis_name']\nconst IDS = ['nhdplusid', 'vpuid', 'reachcode', 'permanent_identifier']\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            height: '100%',\n            overflow: 'hidden',\n            userSelect: 'text'\n        },\n        table: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            overflow: 'hidden'\n        },\n        tableHead: {\n            flex: '0 0'\n        },\n        tableBody: {\n            flex: '1 1',\n            border: '1px solid red',\n            overflow: 'scroll'\n        },\n        tableCell: {\n            // padding: theme.spacing(1) / 2\n        }\n    })\n)\n\nfunction dataPrint(k, val): React.ReactNode {\n    if (val === null || val === undefined) {\n        return <em>n/a</em>\n    } else if (IDS.indexOf(k) > -1) return <code>{val}</code>\n    else if (util.isNumeric(val)) {\n        if (k === 'spheroid_dist') {\n            return numeral(val).format('0.00000')\n        }\n        return util.formatNum(val)\n    } else return val.toString()\n}\n\nconst MarkerFields = ({ data }) => {\n    const classes = useStyles()\n    return (\n        <TableContainer component={Paper} className={classes.root}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead className={classes.tableHead}>\n                    <TableRow>\n                        <TableCell className={classes.tableCell}>Field</TableCell>\n                        <TableCell align=\"right\" className={classes.tableCell}>\n                            Value\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody className={classes.tableBody}>\n                    {Object.keys(data)\n                        .filter((k) => IGNORE_FIELDS.indexOf(k) === -1)\n                        .map((k, idx) => (\n                            <TableRow key={`${k}-${idx}`}>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\n                                    {k.replace(/_/g, ' ')}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>\n                                    {dataPrint(k, data[k])}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nMarkerFields.propTypes = {\n    data: PropTypes.object.isRequired\n}\n\nexport default MarkerFields\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport Topbar from './Topbar'\nimport Map from './Map'\nimport MarkerFields from './MarkerFields'\nimport style from './App.style'\n\nconst useStyles = makeStyles(style)\n\ninterface AppProps {\n    loading?: boolean\n    vectorTiles?: any\n    clickMarker?: any\n    upstreamPoly?: any\n    handleMapClick: (e: any, MapboxObj: any) => void\n}\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst App: React.FC<AppProps> = ({ loading, vectorTiles, clickMarker, handleMapClick, upstreamPoly }: AppProps) => {\n    const classes = useStyles()\n\n    if (loading || !vectorTiles) return <div>loading...</div>\n    return (\n        <AppFrame className={classes.appFrame} topbar={<Topbar title={'Network Attributes'} />} fullWidth noScroll>\n            <div className={classes.parentContainer}>\n                {clickMarker && clickMarker.jsonData && (\n                    <div id=\"drawer-container\" className={classes.drawerContainer}>\n                        <MarkerFields data={clickMarker.jsonData} />\n                    </div>\n                )}\n                <div className={classes.mapContainer}>\n                    <Map {...{ vectorTiles, clickMarker, handleMapClick, upstreamPoly }} />\n                </div>\n            </div>\n        </AppFrame>\n    )\n}\n\nexport default App\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    appFrame: {\n        height: '100%'\n    },\n    parentContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    mapContainer: {\n        flex: '1 1 75%'\n    },\n    drawerContainer: {\n        flex: '0 0 25%',\n        wordWrap: 'break-word',\n        maxWidth: '25%'\n    }\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useHosted } from '@northarrowresearch/react-auth'\nimport { api, graphql } from '@netatt/common'\nimport App from './App'\nimport log from 'loglevel'\nimport { endpoints, aws, isDev } from './config'\nimport { ClickMarkerType } from './types'\n\nconst AppConnect = ({ location, history }) => {\n    const [loading, setLoading] = useState<boolean>(true)\n    const [vectorTiles, setVectorTiles] = useState<any>()\n    const [clickMarker, setClickMarker] = useState<ClickMarkerType>()\n    const [upstreamPoly, setUpstreamPoly] = useState<any>()\n    const currClickMarkerRef = useRef<ClickMarkerType>()\n    currClickMarkerRef.current = clickMarker\n\n    const { isAuthenticated, isAuthComplete, getCurrentToken, signIn, signOut, user } = useHosted(aws, false, isDev)\n\n    useEffect(() => {\n        // RS TILES CDN ==> /NET_ATT/BLM/NHDFlowline/metadata.json\n        if (!loading) return\n        const tilepath = 'NET_ATT/BLM/NHDFlowline'\n        const url = `${process.env.REACT_APP_RS_TILES_CDN}/${tilepath}/metadata.json`\n        log.info('URL', url)\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((d) => {\n                d.bounds = JSON.parse(`[${d.bounds}]`)\n                d.center = JSON.parse(`[${d.center}]`)\n                return {\n                    ...d,\n                    sourceName: 'NHDFlowline',\n                    url: `${process.env.REACT_APP_RS_TILES_CDN}/${tilepath}/{z}/{x}/{y}.pbf`,\n                    json: JSON.parse(d.json),\n                    zoom: 14,\n                    minZoom: parseInt(d.minzoom, 10),\n                    maxZoom: parseInt(d.maxzoom, 10),\n                    longitude: d.center[0],\n                    latitude: d.center[1]\n                }\n            })\n            .then((NHDFlowline) => {\n                log.debug('RESP', NHDFlowline)\n                setVectorTiles({ ...vectorTiles, NHDFlowline })\n                setLoading(false)\n            })\n            .catch((err) => {\n                console.log('DATA::fetch_tile::err:', err) // Print the error if one occurred\n            })\n    }, [loading, vectorTiles])\n\n    const handleMapClick = ({ lngLat }, MapboxObj) => {\n        setClickMarker({\n            lngLat,\n            loading: true,\n            intLngLat: undefined,\n            jsonData: {}\n        })\n\n        getCurrentToken().then((jwt) =>\n            api.apiCall(endpoints.graphql as string, jwt, graphql.queries.geoRecord, { lngLat }).then((data: any) => {\n                try {\n                    log.debug('Return Value', data)\n                    const { cp_line_pt: cpLinePt, geom, pt, ...jsonData } = JSON.parse(data.data.geoRecord[0].data)[0]\n                    const newPt = cpLinePt\n                        .match(/POINT\\(([0-9-.]+)\\s+([0-9-.]+)\\)/)\n                        .slice(-2)\n                        .map(parseFloat)\n                    if (MapboxObj) {\n                        const mbRef: any = MapboxObj\n                        const lineLayer = mbRef.getLayer('NHDFlowlines_lines')\n                        const lineColor = lineLayer.getPaintProperty('line-color')\n                        lineColor[2] = [jsonData.nhdplusid]\n                        log.debug('RETURN', { newPt, cpLinePt, jsonData, lineColor })\n                        mbRef.setPaintProperty('NHDFlowlines_lines', 'line-color', lineColor)\n                    }\n                    // Get the polygon if we can\n                    const startLoad = Date.now()\n                    api.apiCall(endpoints.graphql as string, null, graphql.queries.upstreamCatchment, {\n                        id: jsonData.nhdplusid\n                    })\n                        .then((response: any) => {\n                            log.debug('upstreamCatchment', (Date.now() - startLoad) / 1000, response)\n                            setUpstreamPoly(JSON.parse(response.data.upstreamCatchment))\n                        })\n                        .catch((e) => {\n                            log.error('upstreamCatchment ERROR', (Date.now() - startLoad) / 1000, e)\n                            log.error('ERROR UpstreamCatchment API Call', e)\n                        })\n\n                    setClickMarker({\n                        ...(currClickMarkerRef.current as ClickMarkerType),\n                        loading: false,\n                        intLngLat: newPt,\n                        jsonData\n                    })\n                } catch (e) {\n                    log.error(e, lngLat)\n                }\n            })\n        )\n    }\n    if (!isAuthenticated)\n        return (\n            <div>\n                <button onClick={(): Promise<any> => signIn()}>Logged Out</button>\n            </div>\n        )\n    return <App {...{ loading, vectorTiles, clickMarker, handleMapClick, upstreamPoly }} />\n}\nAppConnect.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n}\n\nexport default AppConnect\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL as string, window.location.href)\n      if (publicUrl.origin !== window.location.origin) {\n          // Our service worker won't work if PUBLIC_URL is on a different origin\n          // from what our page is served on. This might happen if a CDN is used to\n          // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n          return\n      }\n\n      window.addEventListener('load', () => {\n          const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n          if (isLocalhost) {\n              // This is running on localhost. Let's check if a service worker still exists or not.\n              checkValidServiceWorker(swUrl, config)\n\n              // Add some additional logging to localhost, pointing developers to the\n              // service worker/PWA documentation.\n              navigator.serviceWorker.ready.then(() => {\n                  console.log(\n                      'This web app is being served cache-first by a service ' +\n                          'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                  )\n              })\n          } else {\n              // Is not localhost. Just register service worker\n              registerValidSW(swUrl, config)\n          }\n      })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n          registration.onupdatefound = () => {\n              const installingWorker = registration.installing\n              if (installingWorker == null) {\n                  return\n              }\n              installingWorker.onstatechange = () => {\n                  if (installingWorker.state === 'installed') {\n                      if (navigator.serviceWorker.controller) {\n                          // At this point, the updated precached content has been fetched,\n                          // but the previous service worker will still serve the older\n                          // content until all client tabs are closed.\n                          console.log(\n                              'New content is available and will be used when all ' +\n                                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                          )\n\n                          // Execute callback\n                          if (config && config.onUpdate) {\n                              config.onUpdate(registration)\n                          }\n                      } else {\n                          // At this point, everything has been precached.\n                          // It's the perfect time to display a\n                          // \"Content is cached for offline use.\" message.\n                          console.log('Content is cached for offline use.')\n\n                          // Execute callback\n                          if (config && config.onSuccess) {\n                              config.onSuccess(registration)\n                          }\n                      }\n                  }\n              }\n          }\n      })\n      .catch((error) => {\n          console.error('Error during service worker registration:', error)\n      })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n  })\n      .then((response) => {\n          // Ensure service worker exists, and that we really are getting a JS file.\n          const contentType = response.headers.get('content-type')\n          if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n              // No service worker found. Probably a different app. Reload the page.\n              navigator.serviceWorker.ready.then((registration) => {\n                  registration.unregister().then(() => {\n                      window.location.reload()\n                  })\n              })\n          } else {\n              // Service worker found. Proceed as normal.\n              registerValidSW(swUrl, config)\n          }\n      })\n      .catch(() => {\n          console.log('No internet connection found. App is running in offline mode.')\n      })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n          .then((registration) => {\n              registration.unregister()\n          })\n          .catch((error) => {\n              console.error(error.message)\n          })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppContainer from './App.connect'\n// If we're gonna have charts we need this\nimport * as serviceWorker from './serviceWorker'\nimport {\n  HashRouter,\n  Route\n} from 'react-router-dom'\nimport { devSetup } from '@northarrowresearch/react-common'\nimport 'react-vis/dist/style.css'\nimport './index.css'\n\nrequire('typeface-roboto')\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// WE need the redux store first because our App needs its state\nReactDOM.render(\n  <HashRouter basename='/'>\n    <Route path='*' component={AppContainer} />\n  </HashRouter>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}