{"version":3,"sources":["../../src/index.ts","../../src/api.ts","../../src/graphql.ts","../../src/schema.graphql.ts","config.ts","Topbar.tsx","Topbar.style.ts","ClickMarker.tsx","Map.tsx","Map.mapbox.tsx","MarkerFields.tsx","App.tsx","App.style.ts","App.connect.tsx","serviceWorker.ts","index.tsx"],"names":["mapConfig","process","endpoints","mandatoryEnv","REACT_APP_CDN","REACT_APP_MAPBOX_TOKEN","REACT_APP_VERSION","REACT_APP_CONTACT_EMAIL","REACT_APP_GRAPHQL","Object","keys","forEach","keyname","log","error","REACT_APP_GA_TOKEN","redirectUrl","URL","window","location","origin","aws","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","oauth","domain","scope","redirectSignIn","toString","redirectSignOut","responseType","useStyles","makeStyles","theme","root","display","alignItems","width","padding","spacing","textShadow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","version","paddingLeft","logo","height","marginRight","programChooser","margin","color","palette","primary","contrastText","borderColor","transparent","background","text","search","position","border","borderRadius","shape","fade","common","white","marginLeft","flexGrow","maxWidth","breakpoints","up","searchError","searchIcon","pointerEvents","justifyContent","inputRoot","spacer","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","defaultState","TopBar","title","searchSubmit","signOut","classes","useState","searchState","setSearchState","Fragment","AppBar","Toolbar","className","disableGutters","href","src","alt","Typography","variant","clsx","Boolean","InputBase","placeholder","onKeyDown","event","nhdid","key","debug","length","util","isNumeric","undefined","parseInt","then","value","onChange","e","target","input","inputProps","Button","onClick","icon","zIndex","top","left","textAlign","transformOrigin","transform","ClickMarker","latLng","Icon","align","styleTweaks","Error","longitude","latitude","style","initialView","lngLat","Map","vectorTiles","clickMarker","handleMapClick","baseLayer","setBaseLayer","mapViewport","setMapViewport","mapBoxRef","useRef","boundsRef","setTransition","finalStyle","useMemo","combineStyles","MapStyles","info","sources","reduce","acc","vkey","vlayer","sourceName","tiles","url","type","minzoom","minZoom","maxzoom","maxZoom","bounds","layers","id","source","NHDFlowline","layout","visibility","paint","name","metadata","js","android","ios","sprite","glyphs","created","modified","owner","draft","mapStyle","useLayoutEffect","reachBBox","current","mbRef","lineLayer","getLayer","lineColor","getPaintProperty","jsonData","nhdplusid","setPaintProperty","catchBBox","newBBox","coordinates","newBounds","Math","min","map","ma","max","every","newLngLat","idx","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","childLayers","lineSource","intLngLat","properties","percentile","geometry","upstreamPolySource","catchGeo","push","loading","NotListedLocationIcon","RoomIcon","GpsFixedIcon","data","styleButtons","controlPadding","currStyle","mapStyles","setCurrStyle","mapBoxToken","reactMapGLProps","clickRadius","showMe","viewport","onTransitionStart","onTransitionEnd","IGNORE_FIELDS","IDS","overflow","userSelect","table","tableHead","tableBody","tableCell","MarkerFields","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","filter","k","indexOf","replace","val","numeral","format","formatNum","dataPrint","appFrame","parentContainer","flexDirection","mapContainer","flex","drawerContainer","wordWrap","App","topbar","Topbar","fullWidth","noScroll","AppConnect","history","setLoading","setVectorTiles","setClickMarker","currClickMarkerRef","useHosted","isAuthenticated","getCurrentToken","signIn","useEffect","fetch","res","json","d","JSON","parse","center","zoom","catch","err","console","handleGotRecord","record","cpLinePt","cp_line_pt","pt","newPt","catchGeom","bbox","geom","reachGeom","jwt","api","apiCall","graphql","queries","geoRecord","response","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","require","devSetup","ReactDOM","render","basename","path","AppContainer","document","getElementById","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b787687.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.api = __importStar(require(\"./api\"));\nexports.graphql = __importStar(require(\"./graphql\"));\nvar schema_graphql_1 = require(\"./schema.graphql\");\nObject.defineProperty(exports, \"typeDefs\", { enumerable: true, get: function () { return schema_graphql_1.default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authCheck = exports.apiCall = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar graphql_1 = require(\"graphql\");\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nexports.apiCall = function (url, jwt, query, variables) {\n    return axios_1.default({\n        url: url,\n        method: 'post',\n        headers: jwt\n            ? {\n                authorization: \"Bearer \" + jwt\n            }\n            : null,\n        data: {\n            query: graphql_1.print(query),\n            variables: variables\n        }\n    })\n        .then(function (_a) {\n        var axiosData = _a.data;\n        return axiosData;\n    })\n        .catch(function (err) {\n        if (err.response && err.response.status === 404) {\n            throw new Error(\"API Url not found: \" + url);\n        }\n        else if (err.code && err.code === 'ECONNREFUSED') {\n            throw new Error(\"Connection refused. Could not contact: '\" + url + \"'\");\n        }\n        else {\n            loglevel_1.default.error({ url: url, jwt: jwt, query: graphql_1.print(query), variables: variables });\n            throw err;\n        }\n    });\n};\nfunction authCheck(url, jwt) {\n    return exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                }\\n            }\\n        \"], [\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                }\\n            }\\n        \"]))), {});\n}\nexports.authCheck = authCheck;\nvar templateObject_1;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.queries = exports.fragments = void 0;\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.fragments = {\n    record: graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        fragment recordFragment on Record {\\n            id\\n            ds\\n            catchGeom {\\n                geom\\n                bbox\\n            }\\n            reachGeom {\\n                bbox\\n            }\\n            data\\n            __typename\\n        }\\n    \"], [\"\\n        fragment recordFragment on Record {\\n            id\\n            ds\\n            catchGeom {\\n                geom\\n                bbox\\n            }\\n            reachGeom {\\n                bbox\\n            }\\n            data\\n            __typename\\n        }\\n    \"])))\n};\nexports.queries = {\n    geoRecord: graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n        query geoRecord($lngLat: [Float]!) {\\n            geoRecord(lngLat: $lngLat) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query geoRecord($lngLat: [Float]!) {\\n            geoRecord(lngLat: $lngLat) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    record: graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n        query record($id: ID!) {\\n            record(id: $id) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query record($id: ID!) {\\n            record(id: $id) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    geoRecordEPSG: graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n        query geoRecordEPSG($lngLat: [Float]!, $epsg: Int!) {\\n            geoRecordEPSG(lngLat: $lngLat, epsg: $epsg) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query geoRecordEPSG($lngLat: [Float]!, $epsg: Int!) {\\n            geoRecordEPSG(lngLat: $lngLat, epsg: $epsg) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    upstreamCatchment: graphql_tag_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n        query upstreamCatchment($id: ID!) {\\n            upstreamCatchment(id: $id)\\n        }\\n    \"], [\"\\n        query upstreamCatchment($id: ID!) {\\n            upstreamCatchment(id: $id)\\n        }\\n    \"])))\n};\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;\n//# sourceMappingURL=graphql.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar typeDefs = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        # mutation: Mutation\\n    }\\n\\n    type Query {\\n        auth: AuthParams\\n\\n        geoRecord(lngLat: [Float]!): Record\\n        geoRecordEPSG(lngLat: [Float]!, epsg: Int!): Record\\n        upstreamCatchment(id: ID!): RecordGeometry\\n\\n        record(id: ID!, ds: [String]): Record\\n        records(ids: [ID]!, ds: [String]): [RecordSet]\\n    }\\n\\n    # this schema allows the following mutation:\\n    # type Mutation {\\n    # signal a deletion of a record\\n    # insertRecords(id: [ID]!, ds: String!): [Record]!\\n    # deleteRecords(id: [ID]!, ds: String!): [ID]!\\n    # wipeDS(ds: String!): String\\n    # }\\n\\n    type RecordGeometry {\\n        geom: String\\n        bbox: String\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n    }\\n\\n    type RecordSet {\\n        id: ID!\\n        records: [Record]\\n    }\\n\\n    type Record {\\n        id: ID!\\n        ds: String\\n        catchGeom: RecordGeometry\\n        reachGeom: RecordGeometry\\n        data: String\\n    }\\n\"], [\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        # mutation: Mutation\\n    }\\n\\n    type Query {\\n        auth: AuthParams\\n\\n        geoRecord(lngLat: [Float]!): Record\\n        geoRecordEPSG(lngLat: [Float]!, epsg: Int!): Record\\n        upstreamCatchment(id: ID!): RecordGeometry\\n\\n        record(id: ID!, ds: [String]): Record\\n        records(ids: [ID]!, ds: [String]): [RecordSet]\\n    }\\n\\n    # this schema allows the following mutation:\\n    # type Mutation {\\n    # signal a deletion of a record\\n    # insertRecords(id: [ID]!, ds: String!): [Record]!\\n    # deleteRecords(id: [ID]!, ds: String!): [ID]!\\n    # wipeDS(ds: String!): String\\n    # }\\n\\n    type RecordGeometry {\\n        geom: String\\n        bbox: String\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n    }\\n\\n    type RecordSet {\\n        id: ID!\\n        records: [Record]\\n    }\\n\\n    type Record {\\n        id: ID!\\n        ds: String\\n        catchGeom: RecordGeometry\\n        reachGeom: RecordGeometry\\n        data: String\\n    }\\n\"])));\nexports.default = typeDefs;\nvar templateObject_1;\n//# sourceMappingURL=schema.graphql.js.map","import log from 'loglevel'\n\nexport default {\n    // Bright Pastel\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n}\n\nexport const mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n}\n\nexport const endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n}\nexport const isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development'\n\n// const baseurl = process.env.REACT_APP_BASEURL\n// let basename = process.env.REACT_APP_BASENAME\n// let domain = process.env.REACT_APP_DOMAIN\n// if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n//     domain = 'localhost'\n//     basename = ''\n// }\n\n// We throw on necessary environment variables being missing\nconst mandatoryEnv = {\n    REACT_APP_MAPBOX_TOKEN: process.env.REACT_APP_MAPBOX_TOKEN,\n    REACT_APP_VERSION: process.env.REACT_APP_VERSION,\n    REACT_APP_CONTACT_EMAIL: process.env.REACT_APP_CONTACT_EMAIL,\n    REACT_APP_GRAPHQL: process.env.REACT_APP_GRAPHQL\n    // REACT_APP_AWS_REGION: process.env.REACT_APP_AWS_REGION,\n    // REACT_APP_COGNITO_USER_POOL_ID: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n    // REACT_APP_COGNITO_CLIENT_ID: process.env.REACT_APP_COGNITO_CLIENT_ID\n}\n\nObject.keys(mandatoryEnv).forEach((keyname) => {\n    if (!mandatoryEnv[keyname]) {\n        log.error(`You must set environment variable: ${keyname}`)\n    }\n})\n\nexport const version = process.env.REACT_APP_VERSION || 'NO_VERSION'\nexport const contact = process.env.REACT_APP_CONTACT_EMAIL || 'NO_CONTACT'\n\nexport const analytics = {\n    token: process.env.REACT_APP_GA_TOKEN || 'UA-XXXXXXXX-XX'\n}\n\nconst redirectUrl = new URL(process.env.PUBLIC_URL + '/', window.location.origin)\n\nexport const aws = {\n    Auth: {\n        // REQUIRED - Amazon Cognito Identity Pool ID\n        // identityPoolId: process.env.REACT_APP_COGNITO_IDPOOLID, // XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab\n        // REQUIRED - Amazon Cognito Region\n        region: process.env.REACT_APP_AWS_REGION,\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n        // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n        userPoolWebClientId: process.env.REACT_APP_COGNITO_CLIENT_ID,\n        // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl.toString(),\n            redirectSignOut: redirectUrl.toString(),\n            responseType: 'code'\n        }\n    }\n}\n","import React, { useState } from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport InputBase from '@material-ui/core/InputBase'\nimport { util } from '@northarrowresearch/common'\nimport clsx from 'clsx'\n// import MenuIcon from '@material-ui/core/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport style from './Topbar.style'\nimport { version } from './config'\nimport log from 'loglevel'\nconst useStyles = makeStyles(style)\n\ninterface Props {\n    title: string\n    searchSubmit: (nhdid: number) => Promise<void>\n    signOut: () => void\n}\ntype SearchState = {\n    error?: string\n    text: string\n}\nconst defaultState = { text: '' }\n\nconst TopBar: React.FC<Props> = ({ title, searchSubmit, signOut }: Props) => {\n    const classes = useStyles()\n    const [searchState, setSearchState] = useState<SearchState>(defaultState)\n\n    const searchSubmitHandle = (nhdid: string): void => {\n        if (nhdid && nhdid.length > 0 && util.isNumeric(nhdid)) {\n            setSearchState({ ...searchState, error: undefined })\n            log.debug('searchSubmitHandle called', nhdid)\n            searchSubmit(parseInt(nhdid, 10)).then(() => {\n                setSearchState(defaultState)\n            })\n        } else {\n            log.debug('searchSubmitHandle ERROR non numeric')\n            setSearchState({ ...searchState, error: 'Non-Numberic nhdid' })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.root} disableGutters>\n                    <a href=\"http://riverscapes.xyz/\">\n                        <img\n                            className={classes.logo}\n                            src={'https://riverscapes.xyz/assets/images/RiverscapesLogo.png'}\n                            alt=\"logo\"\n                        />\n                    </a>\n                    <Typography variant=\"subtitle1\">{title}</Typography>\n                    <Typography variant=\"overline\" className={classes.version}>\n                        v.{version}\n                    </Typography>\n                    <div className={classes.spacer} />\n                    {searchState.error && (\n                        <Typography variant=\"subtitle1\" color=\"error\">\n                            {searchState.error}\n                        </Typography>\n                    )}\n                    <div className={clsx(classes.search, { [classes.searchError]: Boolean(searchState.error) })}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"NHDPlusID… (55000600125036)\"\n                            onKeyDown={(event): void => {\n                                if (event.key === 'Enter') {\n                                    log.debug('searchSubmitHandle ENTER DETECTED', event)\n                                    searchSubmitHandle(searchState.text)\n                                }\n                            }}\n                            value={searchState.text}\n                            onChange={(e): void => setSearchState({ ...searchState, text: e.target.value })}\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <Button color=\"inherit\" onClick={(): void => signOut()}>\n                        Sign Out\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default TopBar\n","import { Theme, StyleRules } from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        padding: theme.spacing(0, 1),\n        textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n        backgroundImage: `url(https://northarrowresearchlabs.github.io/riverscapes/HeaderBackground.png)`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: '0% 50%',\n        backgroundSize: 'cover',\n        backgroundColor: '#444444'\n    },\n    version: {\n        paddingLeft: theme.spacing(1)\n    },\n    logo: {\n        height: 40,\n        width: 40,\n        marginRight: theme.spacing(2)\n    },\n    programChooser: {\n        margin: theme.spacing(0, 1),\n        color: theme.palette.primary.contrastText,\n        '& svg': {\n            color: theme.palette.primary.contrastText\n        },\n        '&:before': {\n            borderColor: theme.palette.primary.contrastText\n        },\n        '&:after': {\n            borderColor: theme.palette.primary.contrastText\n        }\n    },\n    transparent: {\n        backgroundColor: 'transparent',\n        background: 'none',\n        color: theme.palette.text.primary\n        // borderBottom: `2px transparent`\n    },\n    search: {\n        position: 'relative',\n        border: '1px solid white',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        flexGrow: 1,\n        maxWidth: '20rem',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto'\n        }\n    },\n    searchError: {\n        border: '1px solid red'\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputRoot: {\n        color: 'inherit'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 200\n        }\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'flex',\n            flexGrow: 1\n        }\n    },\n    sectionMobile: {\n        display: 'flex',\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none'\n        }\n    }\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { Marker } from 'react-map-gl'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // border: '1px solid red'\n  },\n  icon: {\n    zIndex: 100,\n    width: 20,\n    height: 20,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    textAlign: 'center',\n    transformOrigin: '50% 50%',\n    transform: 'translateY(-50%) translateX(-50%)'\n  }\n}))\n\nconst ClickMarker = ({ latLng, Icon, align }) => {\n  const classes = useStyles()\n  const styleTweaks: any = {}\n  if (align) {\n    switch (align[0]) {\n      case 'bottom':\n        styleTweaks.transform = 'translateY(-100%)'\n        break\n      case 'top':\n        styleTweaks.transform = 'translateY(0%)'\n        break\n      case 'center':\n        styleTweaks.transform = 'translateY(-50%)'\n        break\n      default:\n        throw new Error('Must specify vertical placement of align')\n    }\n    switch (align[1]) {\n      case 'left':\n        styleTweaks.transform += ' translateX(0%)'\n        break\n      case 'right':\n        styleTweaks.transform += ' translateX(-100%)'\n        break\n      case 'center':\n        styleTweaks.transform += ' translateX(-50%)'\n        break\n      default:\n        throw new Error('Must specify horizontal placement of align')\n    }\n  }\n  return (\n    <Marker\n      className={classes.root}\n      longitude={latLng[0]}\n      latitude={latLng[1]}\n    >\n      <div className={classes.root}>\n        <Icon className={classes.icon} style={styleTweaks} />\n      </div>\n    </Marker>\n  )\n}\n\nClickMarker.propTypes = {\n  latLng: PropTypes.arrayOf(PropTypes.number).isRequired,\n  Icon: PropTypes.object.isRequired,\n  align: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ClickMarker\n","import React, { useState, useMemo, useRef, useLayoutEffect } from 'react'\nimport { FlyToInterpolator } from 'react-map-gl'\nimport { easeCubic } from 'd3-ease'\nimport { BaseMap, StyleButtons, MapStyles, combineStyles } from '@northarrowresearch/react-maps'\nimport { mapConfig } from './config'\nimport { util } from '@northarrowresearch/common'\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation'\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed'\nimport RoomIcon from '@material-ui/icons/Room'\nimport ClickMarker from './ClickMarker'\nimport log from 'loglevel'\nimport { Source, Layer } from 'react-map-gl'\n\nimport mapStyle from './Map.mapbox'\nimport { ClickMarkerType } from './types'\n\ninterface MapProps {\n    vectorTiles?: any\n    clickMarker?: ClickMarkerType\n    upstreamPoly?: any\n    handleMapClick: (e: any, MapboxObj: any) => void\n}\n\nconst initialView = {\n    lngLat: [-114.374749399575, 44.2983897312401]\n}\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst Map: React.FC<MapProps> = ({ vectorTiles, clickMarker, handleMapClick }: MapProps) => {\n    const [baseLayer, setBaseLayer] = useState<number>(0)\n    const [mapViewport, setMapViewport] = useState<any>(initialView)\n    const mapBoxRef = useRef()\n    const boundsRef = useRef<number[]>()\n    // const [isTransitioning, setIsTransitioning] = useState(false)\n    const [transition, setTransition] = useState<any>()\n\n    const finalStyle = useMemo(() => {\n        if (!vectorTiles) return null\n        return combineStyles(MapStyles[baseLayer].style, mapStyle(vectorTiles))\n    }, [baseLayer, vectorTiles])\n\n    useLayoutEffect(() => {\n        if (!clickMarker) return\n        if (clickMarker?.reachBBox) {\n            if (mapBoxRef.current) {\n                const mbRef: any = mapBoxRef.current\n                const lineLayer = mbRef.getLayer('NHDFlowlines_lines')\n                const lineColor = lineLayer.getPaintProperty('line-color')\n                lineColor[2] = [parseInt(clickMarker?.jsonData.nhdplusid, 10)]\n                log.debug('line-color', lineColor, lineLayer)\n                mbRef.setPaintProperty('NHDFlowlines_lines', 'line-color', lineColor)\n            }\n        }\n        if (clickMarker?.catchBBox || clickMarker?.reachBBox) {\n            const newBBox = clickMarker?.catchBBox || clickMarker?.reachBBox\n            if (!newBBox.coordinates) {\n                log.error('coordinates missing')\n                return\n            }\n            const newBounds = [\n                Math.min(...newBBox.coordinates[0].map((ma): number => ma[0])),\n                Math.min(...newBBox.coordinates[0].map((ma): number => ma[1])),\n                Math.max(...newBBox.coordinates[0].map((ma): number => ma[0])),\n                Math.max(...newBBox.coordinates[0].map((ma): number => ma[1]))\n            ]\n            if (newBounds.length === 4 && newBounds.every(util.isNumeric)) {\n                const newLngLat = [(newBounds[0] + newBounds[2]) / 2, (newBounds[1] + newBounds[3]) / 2]\n                if (\n                    !boundsRef.current ||\n                    !newBounds.every((ma, idx) => !boundsRef.current || ma === boundsRef.current[idx])\n                ) {\n                    boundsRef.current = newBounds\n                    setTransition({\n                        transitionDuration: 2000,\n                        transitionInterpolator: new FlyToInterpolator(),\n                        transitionEasing: easeCubic\n                    })\n                    setMapViewport({ bounds: newBounds, lngLat: newLngLat })\n                    log.debug('Mapbounds Set', { clickMarker })\n                }\n            }\n        }\n    }, [clickMarker])\n\n    // const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }) => {\n    //     if (!mapBoxRef.current) mapBoxRef.current = map\n    //     // curZoomRef.current = zoom\n    //     log.debug('zoom', latitude, longitude, zoom)\n    // }\n\n    const childLayers = useMemo(() => {\n        const childLayers: React.ReactNode[] = []\n        const lineSource =\n            clickMarker && clickMarker.intLngLat\n                ? {\n                      type: 'Feature',\n                      properties: { percentile: 0 },\n                      geometry: {\n                          type: 'LineString',\n                          coordinates: [clickMarker.lngLat, clickMarker.intLngLat]\n                      }\n                  }\n                : null\n        const upstreamPolySource =\n            clickMarker && clickMarker.catchGeo\n                ? {\n                      type: 'Feature',\n                      properties: {},\n                      geometry: clickMarker.catchGeo\n                  }\n                : null\n\n        if (clickMarker && clickMarker.lngLat) {\n            childLayers.push(\n                <ClickMarker\n                    key={'ch_clickMarker'}\n                    latLng={clickMarker.lngLat}\n                    Icon={clickMarker.loading ? NotListedLocationIcon : RoomIcon}\n                    align={['bottom', 'center']}\n                />\n            )\n        }\n        if (clickMarker && clickMarker.intLngLat) {\n            childLayers.push(<ClickMarker latLng={clickMarker.intLngLat} Icon={GpsFixedIcon} />)\n        }\n        if (lineSource) {\n            childLayers.push(\n                <Source type=\"geojson\" data={lineSource} key={'ch_connect_line'}>\n                    <Layer\n                        {...{\n                            id: 'connect_line',\n                            type: 'line',\n                            paint: {\n                                'line-color': '#FF0090',\n                                'line-opacity': 1,\n                                'line-width': ['interpolate', ['linear'], ['zoom'], 8, 0.5, 16, 3]\n                            }\n                        }}\n                    />\n                </Source>\n            )\n        }\n        if (upstreamPolySource) {\n            childLayers.push(\n                <Source type=\"geojson\" data={upstreamPolySource} key={'ch_upstream_fill'}>\n                    <Layer\n                        {...{\n                            id: 'upstream_fill',\n                            type: 'fill',\n                            paint: {\n                                'fill-opacity': ['interpolate', ['linear'], ['zoom'], 6, 0.5, 16, 0.2],\n                                'fill-color': '#9933ff'\n                            }\n                        }}\n                    />\n                </Source>\n            )\n        }\n        if (upstreamPolySource) {\n            childLayers.push(\n                <Source type=\"geojson\" data={upstreamPolySource} key={'ch_upstream_line'}>\n                    <Layer\n                        {...{\n                            id: 'upstream_line',\n                            type: 'line',\n                            paint: {\n                                'line-color': '#9933ff',\n                                'line-opacity': 1,\n                                'line-width': 1\n                            }\n                        }}\n                    />\n                </Source>\n            )\n        }\n        return childLayers\n    }, [clickMarker])\n\n    const styleButtons = useMemo(\n        () => (\n            <StyleButtons\n                controlPadding={{}}\n                currStyle={baseLayer as number}\n                mapStyles={MapStyles}\n                setCurrStyle={(idx?: number): void => setBaseLayer(idx as number)}\n            />\n        ),\n        [baseLayer]\n    )\n    log.debug('DEBUGGING', childLayers)\n    return (\n        <BaseMap\n            mapBoxToken={mapConfig.mapBoxToken}\n            // lockToBounds\n            reactMapGLProps={{\n                clickRadius: 2,\n                maxZoom: 16,\n                minZoom: 6,\n                onClick: handleMapClick\n            }}\n            bounds={mapViewport.bounds}\n            showMe\n            viewport={{\n                longitude: mapViewport.lngLat[0],\n                latitude: mapViewport.lngLat[1]\n            }}\n            // onViewportChange={onViewportChange}\n            mapStyles={[{ style: finalStyle }]}\n            transition={transition}\n            onTransitionStart={(): void => {\n                log.debug('onTransition START')\n                // setIsTransitioning(true)\n            }}\n            onTransitionEnd={(): void => {\n                log.debug('onTransition END')\n                // setIsTransitioning(false)\n                setTransition(null)\n            }}\n        >\n            {[styleButtons, ...childLayers]}\n        </BaseMap>\n    )\n}\n\nexport default Map\n","import log from 'loglevel'\n\nexport default (vectorTiles) => {\n    log.info('VECTORTILES', vectorTiles)\n    const sources = Object.keys(vectorTiles).reduce((acc, vkey) => {\n        const vlayer = vectorTiles[vkey]\n        return {\n            ...acc,\n            [vlayer.sourceName]: {\n                tiles: [vlayer.url],\n                type: 'vector',\n                minzoom: vlayer.minZoom,\n                maxzoom: vlayer.maxZoom,\n                bounds: vlayer.bounds\n            }\n        }\n    }, {})\n\n    const layers = [\n        {\n            id: 'NHDFlowlines_lines',\n            type: 'line',\n            source: vectorTiles.NHDFlowline.sourceName,\n            'source-layer': 'NHDFlowlines',\n            minzoom: vectorTiles.NHDFlowline.minZoom,\n            maxzoom: 16.5,\n            layout: { visibility: 'visible' },\n            paint: {\n                'line-opacity': ['interpolate', ['linear'], ['zoom'], vectorTiles.NHDFlowline.minZoom, 0, 8, 1],\n                'line-width': ['interpolate', ['linear'], ['zoom'], vectorTiles.NHDFlowline.minZoom, 0.5, 16, 3],\n                'line-color': [\n                    'match',\n                    ['get', 'NHDPlusID'],\n                    [-1],\n                    '#FFFF00',\n                    ['step', ['get', 'FType'], '#FF0000', 460, '#0000FF']\n                ]\n            }\n        }\n    ]\n    return {\n        version: 8,\n        name: 'Outdoors',\n        metadata: {\n            'mapbox:type': 'default',\n            'mapbox:origin': 'outdoors-v11',\n            'mapbox:autocomposite': true,\n            'mapbox:groups': {},\n            'mapbox:sdk-support': { js: '0.50.0', android: '6.7.0', ios: '4.6.0' }\n        },\n        // 'center': [ -114.19115411710368, 43.32991248939766 ],\n        // 'zoom': 9.061958904803715,\n        // 'bearing': 0,\n        // 'pitch': 0,\n        sources: { ...sources },\n        sprite: 'mapbox://sprites/pipbailey/cjvfq2uwm0vqk1foby0dtwdmk/ayuihl2d38ufkjhmu0pwx0cto',\n        glyphs: 'mapbox://fonts/pipbailey/{fontstack}/{range}.pbf',\n        layers: [...layers],\n        created: '2019-05-08T21:16:06.811Z',\n        id: 'cjvfq2uwm0vqk1foby0dtwdmk',\n        modified: '2019-05-08T22:02:34.939Z',\n        owner: 'pipbailey',\n        visibility: 'private',\n        draft: false\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\n// import Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { util } from '@northarrowresearch/common'\nimport numeral from 'numeral'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\n\nconst IGNORE_FIELDS = ['ogc_fid', 'enabled', 'wbarea_permanent_identifier', 'visibilityfilter', 'gnis_id', 'gnis_name']\nconst IDS = [\n    'nhdplusid',\n    'vpuid',\n    'reachcode',\n    'permanent_identifier',\n    'fromnode',\n    'tonode',\n    'hydroseq',\n    'levelpathi',\n    'terminalpa',\n    'dnlevelpat',\n    'dnhydroseq'\n]\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            height: '100%',\n            overflow: 'scroll',\n            '& *': {\n                userSelect: 'text'\n            }\n        },\n        table: {\n            // display: 'flex',\n            // flexDirection: 'column',\n            // height: '100%',\n            // overflow: 'hidden'\n        },\n        tableHead: {\n            // flex: '0 0'\n        },\n        tableBody: {\n            // flex: '1 1',\n            // border: '1px solid red',\n            // overflow: 'scroll'\n        },\n        tableCell: {\n            // padding: theme.spacing(1) / 2\n        }\n    })\n)\n\nfunction dataPrint(k, val): React.ReactNode {\n    if (val === null || val === undefined) {\n        return <em>n/a</em>\n    } else if (IDS.indexOf(k) > -1) return <code>{val}</code>\n    else if (util.isNumeric(val)) {\n        if (k === 'spheroid_dist') {\n            return numeral(val).format('0.00000')\n        }\n        return util.formatNum(val)\n    } else return val.toString()\n}\n\nconst MarkerFields = ({ data }) => {\n    const classes = useStyles()\n    return (\n        <TableContainer component={Paper} className={classes.root}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead className={classes.tableHead}>\n                    <TableRow>\n                        <TableCell className={classes.tableCell}>Field</TableCell>\n                        <TableCell align=\"right\" className={classes.tableCell}>\n                            Value\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody className={classes.tableBody}>\n                    {Object.keys(data)\n                        .filter((k) => IGNORE_FIELDS.indexOf(k) === -1)\n                        .map((k, idx) => (\n                            <TableRow key={`${k}-${idx}`}>\n                                <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\n                                    {k.replace(/_/g, ' ')}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.tableCell}>\n                                    {dataPrint(k, data[k])}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nMarkerFields.propTypes = {\n    data: PropTypes.object.isRequired\n}\n\nexport default MarkerFields\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport Topbar from './Topbar'\nimport Map from './Map'\nimport MarkerFields from './MarkerFields'\nimport style from './App.style'\n\nconst useStyles = makeStyles(style)\n\ninterface AppProps {\n    loading?: boolean\n    vectorTiles?: any\n    clickMarker?: any\n    searchSubmit: (nhdid: number) => Promise<void>\n    handleMapClick: (e: any, MapboxObj: any) => void\n    signOut: () => void\n}\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst App: React.FC<AppProps> = ({\n    loading,\n    vectorTiles,\n    clickMarker,\n    handleMapClick,\n    searchSubmit,\n    signOut\n}: AppProps) => {\n    const classes = useStyles()\n\n    if (loading || !vectorTiles) return <div>loading...</div>\n    return (\n        <AppFrame\n            className={classes.appFrame}\n            topbar={<Topbar title={'Network Attributes'} searchSubmit={searchSubmit} signOut={signOut} />}\n            fullWidth\n            noScroll\n        >\n            <div className={classes.parentContainer}>\n                {clickMarker && clickMarker.jsonData && (\n                    <div id=\"drawer-container\" className={classes.drawerContainer}>\n                        <MarkerFields data={clickMarker.jsonData} />\n                    </div>\n                )}\n                <div className={classes.mapContainer}>\n                    <Map {...{ vectorTiles, clickMarker, handleMapClick }} />\n                </div>\n            </div>\n        </AppFrame>\n    )\n}\n\nexport default App\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    appFrame: {\n        height: '100%'\n    },\n    parentContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    mapContainer: {\n        overflow: 'hidden',\n        flex: '1 1 75%'\n    },\n    drawerContainer: {\n        flex: '0 0 25%',\n        wordWrap: 'break-word',\n        maxWidth: '25%'\n    }\n})\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useHosted } from '@northarrowresearch/react-auth'\nimport { api, graphql } from '@netatt/common'\nimport App from './App'\nimport log from 'loglevel'\nimport { endpoints, aws, isDev } from './config'\nimport { ClickMarkerType } from './types'\n\nconst AppConnect = ({ location, history }) => {\n    const [loading, setLoading] = useState<boolean>(true)\n    const [vectorTiles, setVectorTiles] = useState<any>()\n    const [clickMarker, setClickMarker] = useState<ClickMarkerType>()\n    const currClickMarkerRef = useRef<ClickMarkerType>()\n    currClickMarkerRef.current = clickMarker\n\n    const { isAuthenticated, getCurrentToken, signIn, signOut } = useHosted(aws, true, isDev)\n\n    useEffect(() => {\n        // RS TILES CDN ==> /NET_ATT/BLM/NHDFlowline/metadata.json\n        if (!loading) return\n        const tilepath = 'NET_ATT/BLM/NHDFlowline'\n        const url = `${process.env.REACT_APP_RS_TILES_CDN}/${tilepath}/metadata.json`\n        log.info('URL', url)\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((d) => {\n                d.bounds = JSON.parse(`[${d.bounds}]`)\n                d.center = JSON.parse(`[${d.center}]`)\n                return {\n                    ...d,\n                    sourceName: 'NHDFlowline',\n                    url: `${process.env.REACT_APP_RS_TILES_CDN}/${tilepath}/{z}/{x}/{y}.pbf`,\n                    json: JSON.parse(d.json),\n                    zoom: 14,\n                    minZoom: parseInt(d.minzoom, 10),\n                    maxZoom: parseInt(d.maxzoom, 10),\n                    longitude: d.center[0],\n                    latitude: d.center[1]\n                }\n            })\n            .then((NHDFlowline) => {\n                log.debug('RESP', NHDFlowline)\n                setVectorTiles({ ...vectorTiles, NHDFlowline })\n                setLoading(false)\n            })\n            .catch((err) => {\n                console.log('DATA::fetch_tile::err:', err) // Print the error if one occurred\n            })\n    }, [loading, vectorTiles])\n\n    const handleGotRecord = (record: any): void => {\n        try {\n            log.debug('handleGotRecord:: Record', record)\n            const { cp_line_pt: cpLinePt, pt, ...jsonData } = JSON.parse(record.data)\n            log.debug('handleGotRecord:: Record data parsed', { cpLinePt, pt, jsonData })\n            const newPt = cpLinePt ? JSON.parse(cpLinePt) : undefined\n\n            setClickMarker({\n                ...(currClickMarkerRef.current as ClickMarkerType),\n                loading: false,\n                intLngLat: newPt ? newPt.coordinates : undefined,\n                catchGeo: record.catchGeom.bbox ? JSON.parse(record.catchGeom.geom) : undefined,\n                catchBBox: record.catchGeom.bbox ? JSON.parse(record.catchGeom.bbox) : undefined,\n                reachBBox: record.reachGeom.bbox ? JSON.parse(record.reachGeom.bbox) : undefined,\n                jsonData: { nhdplusid: record.id, ...jsonData }\n            })\n        } catch (e) {\n            log.error(e, record)\n            setClickMarker({ ...(currClickMarkerRef.current as ClickMarkerType), loading: false })\n        }\n    }\n\n    const handleMapClick = ({ lngLat }): Promise<void> => {\n        setClickMarker({\n            lngLat,\n            loading: true,\n            intLngLat: undefined,\n            catchGeo: undefined,\n            catchBBox: undefined,\n            reachBBox: undefined,\n            jsonData: {}\n        })\n        return getCurrentToken().then((jwt) =>\n            api\n                .apiCall(endpoints.graphql as string, jwt, graphql.queries.geoRecord, { lngLat })\n                .then((response: any) => handleGotRecord(response.data.geoRecord))\n        )\n    }\n\n    const handleSearchSubmit = (nhdplusid: number): Promise<void> => {\n        return getCurrentToken().then((jwt) =>\n            api\n                .apiCall(endpoints.graphql as string, jwt, graphql.queries.record, { id: nhdplusid })\n                .then((response: any) => {\n                    if (response.data.record) {\n                        setClickMarker({\n                            lngLat: undefined,\n                            loading: false,\n                            intLngLat: undefined,\n                            catchGeo: undefined,\n                            catchBBox: undefined,\n                            reachBBox: undefined,\n                            jsonData: {}\n                        })\n                    }\n                    return handleGotRecord(response.data.record)\n                })\n        )\n    }\n\n    if (!isAuthenticated)\n        return (\n            <div>\n                <button onClick={(): Promise<any> => signIn()}>Logged Out</button>\n            </div>\n        )\n    return <App {...{ loading, vectorTiles, clickMarker, handleMapClick, searchSubmit: handleSearchSubmit, signOut }} />\n}\nAppConnect.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n}\n\nexport default AppConnect\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL as string, window.location.href)\n      if (publicUrl.origin !== window.location.origin) {\n          // Our service worker won't work if PUBLIC_URL is on a different origin\n          // from what our page is served on. This might happen if a CDN is used to\n          // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n          return\n      }\n\n      window.addEventListener('load', () => {\n          const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n          if (isLocalhost) {\n              // This is running on localhost. Let's check if a service worker still exists or not.\n              checkValidServiceWorker(swUrl, config)\n\n              // Add some additional logging to localhost, pointing developers to the\n              // service worker/PWA documentation.\n              navigator.serviceWorker.ready.then(() => {\n                  console.log(\n                      'This web app is being served cache-first by a service ' +\n                          'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                  )\n              })\n          } else {\n              // Is not localhost. Just register service worker\n              registerValidSW(swUrl, config)\n          }\n      })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n          registration.onupdatefound = () => {\n              const installingWorker = registration.installing\n              if (installingWorker == null) {\n                  return\n              }\n              installingWorker.onstatechange = () => {\n                  if (installingWorker.state === 'installed') {\n                      if (navigator.serviceWorker.controller) {\n                          // At this point, the updated precached content has been fetched,\n                          // but the previous service worker will still serve the older\n                          // content until all client tabs are closed.\n                          console.log(\n                              'New content is available and will be used when all ' +\n                                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                          )\n\n                          // Execute callback\n                          if (config && config.onUpdate) {\n                              config.onUpdate(registration)\n                          }\n                      } else {\n                          // At this point, everything has been precached.\n                          // It's the perfect time to display a\n                          // \"Content is cached for offline use.\" message.\n                          console.log('Content is cached for offline use.')\n\n                          // Execute callback\n                          if (config && config.onSuccess) {\n                              config.onSuccess(registration)\n                          }\n                      }\n                  }\n              }\n          }\n      })\n      .catch((error) => {\n          console.error('Error during service worker registration:', error)\n      })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n  })\n      .then((response) => {\n          // Ensure service worker exists, and that we really are getting a JS file.\n          const contentType = response.headers.get('content-type')\n          if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n              // No service worker found. Probably a different app. Reload the page.\n              navigator.serviceWorker.ready.then((registration) => {\n                  registration.unregister().then(() => {\n                      window.location.reload()\n                  })\n              })\n          } else {\n              // Service worker found. Proceed as normal.\n              registerValidSW(swUrl, config)\n          }\n      })\n      .catch(() => {\n          console.log('No internet connection found. App is running in offline mode.')\n      })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n          .then((registration) => {\n              registration.unregister()\n          })\n          .catch((error) => {\n              console.error(error.message)\n          })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppContainer from './App.connect'\n// If we're gonna have charts we need this\nimport * as serviceWorker from './serviceWorker'\nimport {\n  HashRouter,\n  Route\n} from 'react-router-dom'\nimport { devSetup } from '@northarrowresearch/react-common'\nimport 'react-vis/dist/style.css'\nimport './index.css'\n\nrequire('typeface-roboto')\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// WE need the redux store first because our App needs its state\nReactDOM.render(\n  <HashRouter basename='/'>\n    <Route path='*' component={AppContainer} />\n  </HashRouter>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}