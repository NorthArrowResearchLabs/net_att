{"version":3,"sources":["../../src/index.ts","../../src/api.ts","../../src/graphql.ts","../../src/schema.graphql.ts","config.ts","App.state.ts","Topbar.tsx","Topbar.style.ts","ClickMarker.tsx","Map.tsx","Map.mapbox.tsx","MetricView/MetricRow.tsx","MetricView/MetricModal.tsx","MetricView/MetricAccordion.tsx","MetricView/index.tsx","App.style.ts","App.tsx","App.connect.tsx","serviceWorker.ts","index.tsx"],"names":["mapConfig","process","endpoints","mandatoryEnv","REACT_APP_CDN","REACT_APP_MAPBOX_TOKEN","REACT_APP_VERSION","REACT_APP_CONTACT_EMAIL","REACT_APP_GRAPHQL","Object","keys","forEach","keyname","log","error","REACT_APP_GA_TOKEN","redirectUrl","URL","window","location","origin","aws","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","oauth","domain","scope","redirectSignIn","toString","redirectSignOut","responseType","initialStateDefaults","version","viewport","latitude","longitude","metricPrefs","pinned","accordion","selectedReachId","undefined","useInitialState","useLocalStorage","initState","_setInitState","useEffect","warn","setInitialState","useCallback","partialState","useStyles","makeStyles","theme","root","display","alignItems","width","padding","spacing","textShadow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","paddingLeft","logo","height","marginRight","programChooser","margin","color","palette","primary","contrastText","borderColor","transparent","background","text","search","position","border","borderRadius","shape","fade","common","white","marginLeft","flexGrow","maxWidth","breakpoints","up","searchError","searchIcon","pointerEvents","justifyContent","inputRoot","spacer","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","defaultState","TopBar","title","searchSubmit","signOut","classes","useState","searchState","setSearchState","Fragment","AppBar","Toolbar","className","disableGutters","href","src","alt","Typography","variant","clsx","Boolean","InputBase","placeholder","onKeyDown","event","nhdid","key","debug","length","util","isNumeric","parseInt","then","value","onChange","e","target","input","inputProps","Button","onClick","icon","zIndex","top","left","textAlign","transformOrigin","transform","ClickMarker","latLng","Icon","align","styleTweaks","Error","style","Map","vectorTiles","selectedReach","initialViewport","handleMapClick","baseLayer","setBaseLayer","bounds","setBounds","mapBoxRef","useRef","boundsRef","setTransition","finalStyle","useMemo","combineStyles","MapStyles","info","sources","reduce","acc","vkey","vlayer","sourceName","tiles","url","type","minzoom","minZoom","maxzoom","maxZoom","layers","id","source","NHDFlowline","layout","visibility","paint","name","metadata","js","android","ios","sprite","glyphs","created","modified","owner","draft","mapStyle","useLayoutEffect","reachBBox","current","mbRef","lineLayer","getLayer","lineColor","getPaintProperty","nhdProps","nhdplusid","setPaintProperty","catchBBox","newBBox","coordinates","newBounds","Math","min","map","ma","max","every","newLngLat","idx","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","setTimeout","lngLat","lineSource","clickCoords","intersect","properties","percentile","geometry","upstreamPolySource","catchGeo","styleButtons","controlPadding","currStyle","mapStyles","setCurrStyle","mapBoxToken","reactMapGLProps","clickRadius","MapboxObj","showMe","onTransitionStart","onTransitionEnd","GpsFixedIcon","loading","NotListedLocationIcon","RoomIcon","data","TabList","IDS","overflow","borderBottom","rootHover","inner","noval","secondary","main","flex","whiteSpace","textOverflow","lineHeight","idVal","stringVal","unit","pinButton","opacity","buttonHover","MetricRow","def","val","isPinned","onPinToggle","isHovered","setHovered","deftype","metric_type","indexOf","metric_key","valstr","format_string","formatNum","numeral","format","dataPrint","onMouseOver","onMouseOut","onDoubleClick","Tooltip","metric_name","units","description","IconButton","size","boxShadow","accordionExpanded","summary","summaryExpanded","summaryContent","details","flexDirection","fieldTitle","fieldCount","MetricAccordion","groups","onAccordionToggle","idp","fields","square","expanded","expandIcon","content","f","filter","idt","tabs","dlgContent","codeContainer","minWidth","code","inputText","fontFamily","open","handleClose","inputRef","JSON","tab","setTab","snack","setSnack","renderText","reducedText","grp","stringify","grpname","kname","join","handleFocus","select","copy","Dialog","onClose","aria-labelledby","fullWidth","DialogContent","Tabs","newValue","aria-label","Tab","label","CSV","Box","TextField","multiline","readOnly","wrap","rows","onFocus","onSelect","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","elevation","severity","userSelect","MarkerFields","metrics","fieldDefs","setOfflineState","downloadDlg","setDownloadDlg","handleAccordionToggle","gname","newAccordion","combinedMetrics","catch_metrics","wing_metrics","groupNames","Array","from","Set","d","group_name","fieldKeys","sort","a","b","toLowerCase","localeCompare","push","mname","n","nhdFieldMaker","pname","find","fd","groupsFiltered","fld","dwnldBtn","pinToggle","newPinned","p","MetricModal","NHDLookup","spheroid_dist","fcode","appFrame","parentContainer","mapContainer","drawerContainer","wordWrap","App","offlineState","ephemeralState","topbar","Topbar","noScroll","Paper","MetricView","defs","vectorTileDefs","defaultCurrentState","AppConnect","setLoading","setError","setEphemeralState","useHosted","isAuthenticated","getCurrentToken","signIn","stateRef","offline","ephemeral","newLoading","setPartialEphemeralState","partial","fetch","res","json","parse","center","zoom","catch","err","jwt","api","apiCall","graphql","queries","response","handleGotRecord","record","cpLinePt","cp_line_pt","pt","newPt","catchGeom","bbox","geom","reachGeom","geoRecord","Promise","resolve","handleSearchSubmit","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","require","devSetup","ReactDOM","render","basename","path","component","AppContainer","document","getElementById","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.baf5e757.chunk.js","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.api = __importStar(require(\"./api\"));\nexports.graphql = __importStar(require(\"./graphql\"));\nvar schema_graphql_1 = require(\"./schema.graphql\");\nObject.defineProperty(exports, \"typeDefs\", { enumerable: true, get: function () { return schema_graphql_1.default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authCheck = exports.apiCall = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar graphql_1 = require(\"graphql\");\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar loglevel_1 = __importDefault(require(\"loglevel\"));\nexports.apiCall = function (url, jwt, query, variables) {\n    return axios_1.default({\n        url: url,\n        method: 'post',\n        headers: jwt\n            ? {\n                authorization: \"Bearer \" + jwt\n            }\n            : null,\n        data: {\n            query: graphql_1.print(query),\n            variables: variables\n        }\n    })\n        .then(function (_a) {\n        var axiosData = _a.data;\n        return axiosData;\n    })\n        .catch(function (err) {\n        if (err.response && err.response.status === 404) {\n            throw new Error(\"API Url not found: \" + url);\n        }\n        else if (err.code && err.code === 'ECONNREFUSED') {\n            throw new Error(\"Connection refused. Could not contact: '\" + url + \"'\");\n        }\n        else {\n            loglevel_1.default.error({ url: url, jwt: jwt, query: graphql_1.print(query), variables: variables });\n            throw err;\n        }\n    });\n};\nfunction authCheck(url, jwt) {\n    return exports.apiCall(url, jwt, graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                }\\n            }\\n        \"], [\"\\n            query AuthCall {\\n                auth {\\n                    loggedIn\\n                    userPool\\n                    clientId\\n                    region\\n                }\\n            }\\n        \"]))), {});\n}\nexports.authCheck = authCheck;\nvar templateObject_1;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.queries = exports.fragments = void 0;\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nexports.fragments = {\n    record: graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n        fragment recordFragment on Record {\\n            id\\n            ds\\n            catchGeom {\\n                geom\\n                bbox\\n            }\\n            reachGeom {\\n                bbox\\n            }\\n            metrics\\n            nhdProps\\n            __typename\\n        }\\n    \"], [\"\\n        fragment recordFragment on Record {\\n            id\\n            ds\\n            catchGeom {\\n                geom\\n                bbox\\n            }\\n            reachGeom {\\n                bbox\\n            }\\n            metrics\\n            nhdProps\\n            __typename\\n        }\\n    \"])))\n};\nexports.queries = {\n    fieldDefs: graphql_tag_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n        query fieldDefs {\\n            fieldDefs\\n        }\\n    \"], [\"\\n        query fieldDefs {\\n            fieldDefs\\n        }\\n    \"]))),\n    geoRecord: graphql_tag_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n        query geoRecord($lngLat: [Float]!) {\\n            geoRecord(lngLat: $lngLat) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query geoRecord($lngLat: [Float]!) {\\n            geoRecord(lngLat: $lngLat) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    record: graphql_tag_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n        query record($id: ID!) {\\n            record(id: $id) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query record($id: ID!) {\\n            record(id: $id) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    geoRecordEPSG: graphql_tag_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n        query geoRecordEPSG($lngLat: [Float]!, $epsg: Int!) {\\n            geoRecordEPSG(lngLat: $lngLat, epsg: $epsg) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"], [\"\\n        query geoRecordEPSG($lngLat: [Float]!, $epsg: Int!) {\\n            geoRecordEPSG(lngLat: $lngLat, epsg: $epsg) {\\n                ...recordFragment\\n            }\\n        }\\n        \", \"\\n    \"])), exports.fragments.record),\n    upstreamCatchment: graphql_tag_1.default(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n        query upstreamCatchment($id: ID!) {\\n            upstreamCatchment(id: $id)\\n        }\\n    \"], [\"\\n        query upstreamCatchment($id: ID!) {\\n            upstreamCatchment(id: $id)\\n        }\\n    \"])))\n};\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;\n//# sourceMappingURL=graphql.js.map","\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_tag_1 = __importDefault(require(\"graphql-tag\"));\nvar typeDefs = graphql_tag_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        # mutation: Mutation\\n    }\\n\\n    type Query {\\n        auth: AuthParams\\n\\n        fieldDefs: String\\n        geoRecord(lngLat: [Float]!): Record\\n        geoRecordEPSG(lngLat: [Float]!, epsg: Int!): Record\\n        upstreamCatchment(id: ID!): RecordGeometry\\n\\n        record(id: ID!, ds: [String]): Record\\n        records(ids: [ID]!, ds: [String]): [RecordSet]\\n    }\\n\\n    # this schema allows the following mutation:\\n    # type Mutation {\\n    # signal a deletion of a record\\n    # insertRecords(id: [ID]!, ds: String!): [Record]!\\n    # deleteRecords(id: [ID]!, ds: String!): [ID]!\\n    # wipeDS(ds: String!): String\\n    # }\\n\\n    type RecordGeometry {\\n        geom: String\\n        bbox: String\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n    }\\n\\n    type RecordSet {\\n        id: ID!\\n        records: [Record]\\n    }\\n\\n    type Record {\\n        id: ID!\\n        ds: String\\n        catchGeom: RecordGeometry\\n        reachGeom: RecordGeometry\\n        metrics: String\\n        nhdProps: String\\n    }\\n\"], [\"\\n    # Check out the cheat sheet:\\n    # https://raw.githubusercontent.com/sogko/graphql-shorthand-notation-cheat-sheet/master/graphql-shorthand-notation-cheat-sheet.png\\n\\n    schema {\\n        query: Query\\n        # mutation: Mutation\\n    }\\n\\n    type Query {\\n        auth: AuthParams\\n\\n        fieldDefs: String\\n        geoRecord(lngLat: [Float]!): Record\\n        geoRecordEPSG(lngLat: [Float]!, epsg: Int!): Record\\n        upstreamCatchment(id: ID!): RecordGeometry\\n\\n        record(id: ID!, ds: [String]): Record\\n        records(ids: [ID]!, ds: [String]): [RecordSet]\\n    }\\n\\n    # this schema allows the following mutation:\\n    # type Mutation {\\n    # signal a deletion of a record\\n    # insertRecords(id: [ID]!, ds: String!): [Record]!\\n    # deleteRecords(id: [ID]!, ds: String!): [ID]!\\n    # wipeDS(ds: String!): String\\n    # }\\n\\n    type RecordGeometry {\\n        geom: String\\n        bbox: String\\n    }\\n\\n    type AuthParams {\\n        loggedIn: Boolean\\n        userPool: String\\n        clientId: String\\n        region: String\\n    }\\n\\n    type RecordSet {\\n        id: ID!\\n        records: [Record]\\n    }\\n\\n    type Record {\\n        id: ID!\\n        ds: String\\n        catchGeom: RecordGeometry\\n        reachGeom: RecordGeometry\\n        metrics: String\\n        nhdProps: String\\n    }\\n\"])));\nexports.default = typeDefs;\nvar templateObject_1;\n//# sourceMappingURL=schema.graphql.js.map","import log from 'loglevel'\nimport { OfflineStateType } from './types'\n\nexport default {\n    // Bright Pastel\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n}\n\nexport const mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n}\n\nexport const endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n}\nexport const isDev = process.env.NODE_ENV && process.env.NODE_ENV === 'development'\n\n// const baseurl = process.env.REACT_APP_BASEURL\n// let basename = process.env.REACT_APP_BASENAME\n// let domain = process.env.REACT_APP_DOMAIN\n// if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\n//     domain = 'localhost'\n//     basename = ''\n// }\n\n// We throw on necessary environment variables being missing\nconst mandatoryEnv = {\n    REACT_APP_MAPBOX_TOKEN: process.env.REACT_APP_MAPBOX_TOKEN,\n    REACT_APP_VERSION: process.env.REACT_APP_VERSION,\n    REACT_APP_CONTACT_EMAIL: process.env.REACT_APP_CONTACT_EMAIL,\n    REACT_APP_GRAPHQL: process.env.REACT_APP_GRAPHQL\n    // REACT_APP_AWS_REGION: process.env.REACT_APP_AWS_REGION,\n    // REACT_APP_COGNITO_USER_POOL_ID: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n    // REACT_APP_COGNITO_CLIENT_ID: process.env.REACT_APP_COGNITO_CLIENT_ID\n}\n\nObject.keys(mandatoryEnv).forEach((keyname) => {\n    if (!mandatoryEnv[keyname]) {\n        log.error(`You must set environment variable: ${keyname}`)\n    }\n})\n\nexport const version = process.env.REACT_APP_VERSION || 'NO_VERSION'\nexport const contact = process.env.REACT_APP_CONTACT_EMAIL || 'NO_CONTACT'\n\nexport const analytics = {\n    token: process.env.REACT_APP_GA_TOKEN || 'UA-XXXXXXXX-XX'\n}\n\nconst redirectUrl = new URL(process.env.PUBLIC_URL + '/', window.location.origin)\n\nexport const aws = {\n    Auth: {\n        // REQUIRED - Amazon Cognito Identity Pool ID\n        // identityPoolId: process.env.REACT_APP_COGNITO_IDPOOLID, // XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab\n        // REQUIRED - Amazon Cognito Region\n        region: process.env.REACT_APP_AWS_REGION,\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: process.env.REACT_APP_COGNITO_USER_POOL_ID,\n        // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n        userPoolWebClientId: process.env.REACT_APP_COGNITO_CLIENT_ID,\n        // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl.toString(),\n            redirectSignOut: redirectUrl.toString(),\n            responseType: 'code'\n        }\n    }\n}\n\nexport const initialStateDefaults: OfflineStateType = {\n    version,\n    viewport: {\n        latitude: 44.2983897312401,\n        longitude: -114.374749399575\n    },\n    metricPrefs: {\n        pinned: [],\n        accordion: {}\n    },\n    selectedReachId: undefined\n}\n","import { useCallback, useEffect } from 'react'\nimport { OfflineStateType } from './types'\nimport { initialStateDefaults, version } from './config'\nimport log from 'loglevel'\nimport { useLocalStorage } from '@northarrowresearch/react-common'\n\nconst STATE_KEY = 'INIT_STATE'\n\nconst useInitialState = (): [any, (partialState: Partial<OfflineStateType>) => void] => {\n    const [initState, _setInitState] = useLocalStorage(STATE_KEY, initialStateDefaults)\n\n    // This ensures a clean state when there's a version upgrade. Maybe a little excessive but irt\n    // will really help with debugging\n    useEffect(() => {\n        if (version !== initState.version) {\n            log.warn('Version upgrade detected, wiping slate!')\n            _setInitState(initialStateDefaults)\n        }\n    }, [initState.version, _setInitState])\n\n    const setInitialState = useCallback(\n        (partialState: Partial<OfflineStateType>): void => {\n            _setInitState({\n                ...initState,\n                ...partialState\n            } as OfflineStateType)\n        },\n        [initState, _setInitState]\n    )\n\n    return [initState, setInitialState]\n}\n\nexport default useInitialState\n","import React, { useState } from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport InputBase from '@material-ui/core/InputBase'\nimport { util } from '@northarrowresearch/common'\nimport clsx from 'clsx'\n// import MenuIcon from '@material-ui/core/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport style from './Topbar.style'\nimport { version } from './config'\nimport log from 'loglevel'\nconst useStyles = makeStyles(style)\n\ninterface Props {\n    title: string\n    searchSubmit: (nhdid: number) => Promise<void>\n    signOut: () => void\n}\ntype SearchState = {\n    error?: string\n    text: string\n}\nconst defaultState = { text: '' }\n\nconst TopBar: React.FC<Props> = ({ title, searchSubmit, signOut }: Props) => {\n    const classes = useStyles()\n    const [searchState, setSearchState] = useState<SearchState>(defaultState)\n\n    const searchSubmitHandle = (nhdid: string): void => {\n        if (nhdid && nhdid.length > 0 && util.isNumeric(nhdid)) {\n            setSearchState({ ...searchState, error: undefined })\n            log.debug('searchSubmitHandle called', nhdid)\n            searchSubmit(parseInt(nhdid, 10)).then(() => {\n                setSearchState(defaultState)\n            })\n        } else {\n            log.debug('searchSubmitHandle ERROR non numeric')\n            setSearchState({ ...searchState, error: 'Non-Numberic nhdid' })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.root} disableGutters>\n                    <a href=\"http://riverscapes.xyz/\">\n                        <img\n                            className={classes.logo}\n                            src={'https://riverscapes.xyz/assets/images/RiverscapesLogo.png'}\n                            alt=\"logo\"\n                        />\n                    </a>\n                    <Typography variant=\"subtitle1\">{title}</Typography>\n                    <Typography variant=\"overline\" className={classes.version}>\n                        v.{version}\n                    </Typography>\n                    <div className={classes.spacer} />\n                    {searchState.error && (\n                        <Typography variant=\"subtitle1\" color=\"error\">\n                            {searchState.error}\n                        </Typography>\n                    )}\n                    <div className={clsx(classes.search, { [classes.searchError]: Boolean(searchState.error) })}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"NHDPlusID… (55000600125036)\"\n                            onKeyDown={(event): void => {\n                                if (event.key === 'Enter') {\n                                    log.debug('searchSubmitHandle ENTER DETECTED', event)\n                                    searchSubmitHandle(searchState.text)\n                                }\n                            }}\n                            value={searchState.text}\n                            onChange={(e): void => setSearchState({ ...searchState, text: e.target.value })}\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <Button color=\"inherit\" onClick={(): void => signOut()}>\n                        Sign Out\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default TopBar\n","import { Theme, StyleRules } from '@material-ui/core'\nimport { fade } from '@material-ui/core/styles'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        padding: theme.spacing(0, 1),\n        textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n        backgroundImage: `url(https://northarrowresearchlabs.github.io/riverscapes/HeaderBackground.png)`,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: '0% 50%',\n        backgroundSize: 'cover',\n        backgroundColor: '#444444'\n    },\n    version: {\n        paddingLeft: theme.spacing(1)\n    },\n    logo: {\n        height: 40,\n        width: 40,\n        marginRight: theme.spacing(2)\n    },\n    programChooser: {\n        margin: theme.spacing(0, 1),\n        color: theme.palette.primary.contrastText,\n        '& svg': {\n            color: theme.palette.primary.contrastText\n        },\n        '&:before': {\n            borderColor: theme.palette.primary.contrastText\n        },\n        '&:after': {\n            borderColor: theme.palette.primary.contrastText\n        }\n    },\n    transparent: {\n        backgroundColor: 'transparent',\n        background: 'none',\n        color: theme.palette.text.primary\n        // borderBottom: `2px transparent`\n    },\n    search: {\n        position: 'relative',\n        border: '1px solid white',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        flexGrow: 1,\n        maxWidth: '20rem',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto'\n        }\n    },\n    searchError: {\n        border: '1px solid red'\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputRoot: {\n        color: 'inherit'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 200\n        }\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'flex',\n            flexGrow: 1\n        }\n    },\n    sectionMobile: {\n        display: 'flex',\n        flexGrow: 1,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none'\n        }\n    }\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { Marker } from 'react-map-gl'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // border: '1px solid red'\n    },\n    icon: {\n        zIndex: 100,\n        width: 20,\n        height: 20,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        textAlign: 'center',\n        transformOrigin: '50% 50%',\n        transform: 'translateY(-50%) translateX(-50%)'\n    }\n}))\n\nconst ClickMarker = ({ latLng, Icon, align }) => {\n    const classes = useStyles()\n    const styleTweaks: any = {}\n    if (align) {\n        switch (align[0]) {\n            case 'bottom':\n                styleTweaks.transform = 'translateY(-100%)'\n                break\n            case 'top':\n                styleTweaks.transform = 'translateY(0%)'\n                break\n            case 'center':\n                styleTweaks.transform = 'translateY(-50%)'\n                break\n            default:\n                throw new Error('Must specify vertical placement of align')\n        }\n        switch (align[1]) {\n            case 'left':\n                styleTweaks.transform += ' translateX(0%)'\n                break\n            case 'right':\n                styleTweaks.transform += ' translateX(-100%)'\n                break\n            case 'center':\n                styleTweaks.transform += ' translateX(-50%)'\n                break\n            default:\n                throw new Error('Must specify horizontal placement of align')\n        }\n    }\n    return (\n        <Marker className={classes.root} longitude={latLng[0]} latitude={latLng[1]}>\n            <div className={classes.root}>\n                <Icon className={classes.icon} style={styleTweaks} />\n            </div>\n        </Marker>\n    )\n}\n\nClickMarker.propTypes = {\n    latLng: PropTypes.arrayOf(PropTypes.number).isRequired,\n    Icon: PropTypes.object.isRequired,\n    align: PropTypes.arrayOf(PropTypes.string)\n}\n\nexport default ClickMarker\n","import React, { useState, useMemo, useRef, useLayoutEffect } from 'react'\nimport { FlyToInterpolator } from 'react-map-gl'\nimport { easeCubic } from 'd3-ease'\nimport { BaseMap, StyleButtons, MapStyles, combineStyles } from '@northarrowresearch/react-maps'\nimport { mapConfig } from './config'\nimport { util } from '@northarrowresearch/common'\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation'\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed'\nimport RoomIcon from '@material-ui/icons/Room'\nimport ClickMarker from './ClickMarker'\nimport log from 'loglevel'\nimport { Source, Layer } from 'react-map-gl'\n\nimport mapStyle from './Map.mapbox'\nimport { SelectedReach, VectorTilesDefsType, ViewportStateType } from './types'\n\ninterface MapProps {\n    initialViewport: ViewportStateType\n    vectorTiles: VectorTilesDefsType\n    selectedReach?: SelectedReach\n    handleMapClick: (e: any, MapboxObj: any) => void\n}\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst Map: React.FC<MapProps> = ({ vectorTiles, selectedReach, initialViewport, handleMapClick }: MapProps) => {\n    const [baseLayer, setBaseLayer] = useState<number>(0)\n    const [bounds, setBounds] = useState<number[]>()\n    const mapBoxRef = useRef()\n    const boundsRef = useRef<number[]>()\n    // const [isTransitioning, setIsTransitioning] = useState(false)\n    const [transition, setTransition] = useState<any>()\n\n    const finalStyle = useMemo(() => {\n        if (!vectorTiles) return null\n        return combineStyles(MapStyles[baseLayer].style, mapStyle(vectorTiles))\n    }, [baseLayer, vectorTiles])\n\n    useLayoutEffect(() => {\n        if (!selectedReach) return\n        if (selectedReach?.reachBBox) {\n            if (mapBoxRef.current) {\n                const mbRef: any = mapBoxRef.current\n                const lineLayer = mbRef.getLayer('NHDFlowlines_lines')\n                const lineColor = lineLayer.getPaintProperty('line-color')\n                lineColor[2] = [parseInt(selectedReach?.nhdProps?.nhdplusid, 10)]\n                log.debug('line-color', lineColor, lineLayer)\n                mbRef.setPaintProperty('NHDFlowlines_lines', 'line-color', lineColor)\n            }\n        }\n        if (selectedReach?.catchBBox || selectedReach?.reachBBox) {\n            const newBBox = selectedReach?.catchBBox || selectedReach?.reachBBox\n            if (!newBBox.coordinates) {\n                log.error('coordinates missing')\n                return\n            }\n            const newBounds = [\n                Math.min(...newBBox.coordinates[0].map((ma): number => ma[0])),\n                Math.min(...newBBox.coordinates[0].map((ma): number => ma[1])),\n                Math.max(...newBBox.coordinates[0].map((ma): number => ma[0])),\n                Math.max(...newBBox.coordinates[0].map((ma): number => ma[1]))\n            ]\n            if (newBounds.length === 4 && newBounds.every(util.isNumeric)) {\n                const newLngLat = [(newBounds[0] + newBounds[2]) / 2, (newBounds[1] + newBounds[3]) / 2]\n                if (\n                    !boundsRef.current ||\n                    !newBounds.every((ma, idx) => !boundsRef.current || ma === boundsRef.current[idx])\n                ) {\n                    boundsRef.current = newBounds\n                    setTransition({\n                        transitionDuration: 2000,\n                        transitionInterpolator: new FlyToInterpolator(),\n                        transitionEasing: easeCubic\n                    })\n                    setTimeout(() => setTransition(undefined), 2000)\n                    setBounds(newBounds)\n                    log.debug('Mapbounds Set', { bounds: newBounds, lngLat: newLngLat })\n                }\n            }\n        }\n    }, [selectedReach])\n\n    // const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }) => {\n    //     if (!mapBoxRef.current) mapBoxRef.current = map\n    //     // curZoomRef.current = zoom\n    //     log.debug('zoom', latitude, longitude, zoom)\n    // }\n\n    const lineSource =\n        selectedReach && selectedReach.clickCoords && selectedReach.intersect\n            ? {\n                  type: 'Feature',\n                  properties: { percentile: 0 },\n                  geometry: {\n                      type: 'LineString',\n                      coordinates: [selectedReach.clickCoords, selectedReach.intersect]\n                  }\n              }\n            : null\n    const upstreamPolySource =\n        selectedReach && selectedReach.catchGeo\n            ? {\n                  type: 'Feature',\n                  properties: {},\n                  geometry: selectedReach.catchGeo\n              }\n            : null\n\n    const styleButtons = useMemo(\n        () => (\n            <StyleButtons\n                controlPadding={{}}\n                currStyle={baseLayer as number}\n                mapStyles={MapStyles}\n                setCurrStyle={(idx?: number): void => setBaseLayer(idx as number)}\n            />\n        ),\n        [baseLayer]\n    )\n\n    return (\n        <BaseMap\n            mapBoxToken={mapConfig.mapBoxToken}\n            // lockToBounds\n            reactMapGLProps={{\n                clickRadius: 2,\n                maxZoom: 16,\n                minZoom: 6,\n                onClick: (e: any, MapboxObj: any): void => {\n                    setTransition(null)\n                    handleMapClick(e, MapboxObj)\n                }\n            }}\n            bounds={bounds}\n            showMe\n            viewport={initialViewport}\n            // onViewportChange={onViewportChange}\n            mapStyles={[{ style: finalStyle }]}\n            transition={transition}\n            onTransitionStart={(): void => {\n                log.debug('onTransition START')\n            }}\n            onTransitionEnd={(): void => {\n                log.debug('onTransition END')\n                setTransition(null)\n            }}\n        >\n            {styleButtons}\n            {selectedReach && selectedReach.intersect && (\n                <ClickMarker latLng={selectedReach.intersect} Icon={GpsFixedIcon} />\n            )}\n\n            {selectedReach && selectedReach.clickCoords && (\n                <ClickMarker\n                    key={'ch_clickMarker'}\n                    latLng={selectedReach.clickCoords}\n                    Icon={selectedReach.loading ? NotListedLocationIcon : RoomIcon}\n                    align={['bottom', 'center']}\n                />\n            )}\n\n            {lineSource && (\n                <Source type=\"geojson\" data={lineSource} key={'ch_connect_line'}>\n                    <Layer\n                        {...{\n                            id: 'connect_line',\n                            type: 'line',\n                            paint: {\n                                'line-color': '#FF0090',\n                                'line-opacity': 1,\n                                'line-width': ['interpolate', ['linear'], ['zoom'], 8, 0.5, 16, 3]\n                            }\n                        }}\n                    />\n                </Source>\n            )}\n            {upstreamPolySource && (\n                <Source type=\"geojson\" data={upstreamPolySource} key={'ch_upstream_line'}>\n                    <Layer\n                        {...{\n                            id: 'upstream_line',\n                            type: 'line',\n                            paint: {\n                                'line-color': '#9933ff',\n                                'line-opacity': 1,\n                                'line-width': 1\n                            }\n                        }}\n                    />\n                    <Layer\n                        {...{\n                            id: 'upstream_fill',\n                            type: 'fill',\n                            paint: {\n                                'fill-opacity': ['interpolate', ['linear'], ['zoom'], 6, 0.5, 16, 0.2],\n                                'fill-color': '#9933ff'\n                            }\n                        }}\n                    />\n                </Source>\n            )}\n        </BaseMap>\n    )\n}\n\nexport default Map\n","import log from 'loglevel'\n\nexport default (vectorTiles) => {\n    log.info('VECTORTILES', vectorTiles)\n    const sources = Object.keys(vectorTiles).reduce((acc, vkey) => {\n        const vlayer = vectorTiles[vkey]\n        return {\n            ...acc,\n            [vlayer.sourceName]: {\n                tiles: [vlayer.url],\n                type: 'vector',\n                minzoom: vlayer.minZoom,\n                maxzoom: vlayer.maxZoom,\n                bounds: vlayer.bounds\n            }\n        }\n    }, {})\n\n    const layers = [\n        {\n            id: 'NHDFlowlines_lines',\n            type: 'line',\n            source: vectorTiles.NHDFlowline.sourceName,\n            'source-layer': 'NHDFlowlines',\n            minzoom: vectorTiles.NHDFlowline.minZoom,\n            maxzoom: 16.5,\n            layout: { visibility: 'visible' },\n            paint: {\n                'line-opacity': ['interpolate', ['linear'], ['zoom'], vectorTiles.NHDFlowline.minZoom, 0, 8, 1],\n                'line-width': ['interpolate', ['linear'], ['zoom'], vectorTiles.NHDFlowline.minZoom, 0.5, 16, 3],\n                'line-color': [\n                    'match',\n                    ['get', 'NHDPlusID'],\n                    [-1],\n                    '#FFFF00',\n                    ['step', ['get', 'FType'], '#FF0000', 460, '#0000FF']\n                ]\n            }\n        }\n    ]\n    return {\n        version: 8,\n        name: 'Outdoors',\n        metadata: {\n            'mapbox:type': 'default',\n            'mapbox:origin': 'outdoors-v11',\n            'mapbox:autocomposite': true,\n            'mapbox:groups': {},\n            'mapbox:sdk-support': { js: '0.50.0', android: '6.7.0', ios: '4.6.0' }\n        },\n        // 'center': [ -114.19115411710368, 43.32991248939766 ],\n        // 'zoom': 9.061958904803715,\n        // 'bearing': 0,\n        // 'pitch': 0,\n        sources: { ...sources },\n        sprite: 'mapbox://sprites/pipbailey/cjvfq2uwm0vqk1foby0dtwdmk/ayuihl2d38ufkjhmu0pwx0cto',\n        glyphs: 'mapbox://fonts/pipbailey/{fontstack}/{range}.pbf',\n        layers: [...layers],\n        created: '2019-05-08T21:16:06.811Z',\n        id: 'cjvfq2uwm0vqk1foby0dtwdmk',\n        modified: '2019-05-08T22:02:34.939Z',\n        owner: 'pipbailey',\n        visibility: 'private',\n        draft: false\n    }\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState } from 'react'\nimport clsx from 'clsx'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport numeral from 'numeral'\n\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined'\nimport TurnedInNotSharpIcon from '@material-ui/icons/TurnedInNotSharp'\n\nimport { FieldDef } from '../types'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\n// import log from 'loglevel'\n\nimport { util } from '@northarrowresearch/common'\n\ninterface Props {\n    def: FieldDef\n    val: any\n    isPinned?: boolean\n    onPinToggle: (pinToggle: string) => void\n}\n\nfunction dataPrint(metric_type: string, metric_key: string, format_string: string, val: any): React.ReactNode {\n    if (val === null) {\n        return <em>NULL</em>\n    } else if (metric_type) {\n        switch (metric_type) {\n            case 'string':\n                return val\n            case 'id':\n                return val\n            case 'float':\n                if (!util.isNumeric(val)) {\n                    return val\n                } else if (format_string && format_string.length > 0) {\n                    return numeral(val).format(format_string)\n                } else {\n                    return util.formatNum(val, 3)\n                }\n            default:\n                return val\n        }\n    }\n    // Generic, unlisted values\n    else if (util.isNumeric(val)) {\n        if (metric_key === 'spheroid_dist') {\n            return util.formatNum(val, 6)\n        }\n        return util.formatNum(val, 3)\n    } else {\n        return val.toString()\n    }\n}\n\n// This is all here for some hacky nhdprops fields\nconst IDS = [\n    'nhdplusid',\n    'vpuid',\n    'reachcode',\n    'permanent_identifier',\n    'fromnode',\n    'tonode',\n    'hydroseq',\n    'levelpathi',\n    'terminalpa',\n    'dnlevelpat',\n    'dnhydroseq'\n]\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            display: 'flex',\n            width: '100%',\n            overflow: 'hidden',\n            borderBottom: '1px solid #DEDEDE'\n        },\n        rootHover: {\n            background: '#eee'\n        },\n        inner: {\n            display: 'flex',\n            width: '100%',\n            overflow: 'hidden'\n            // '& > *': {\n            //     border: '1px solid green'\n            // }\n        },\n        noval: {\n            color: '#999999'\n        },\n        pinned: {\n            background: theme.palette.secondary.main,\n            borderBottom: `1px solid ${theme.palette.secondary.main}`,\n            color: theme.palette.secondary.contrastText\n        },\n        name: {\n            padding: '3px',\n            flex: '1 1 70%',\n            textAlign: 'left',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        },\n        value: {\n            lineHeight: '1.5rem',\n            padding: '3px',\n            flex: '1 1 20%',\n            textAlign: 'right'\n        },\n        idVal: {\n            color: theme.palette.text.secondary,\n            padding: theme.spacing(0.5, 1),\n            border: '1px solid #dddddd',\n            background: '#eeeeee'\n        },\n        stringVal: {\n            textAlign: 'left'\n        },\n        unit: {\n            lineHeight: '1.5rem',\n            padding: '3px',\n            paddingLeft: theme.spacing(1) / 2,\n            flex: '0 1 5%',\n            textAlign: 'left'\n        },\n        pinButton: {\n            opacity: 0\n        },\n        buttonHover: {\n            flex: '0 0',\n            opacity: 1\n        }\n    })\n)\n\nconst MetricRow: React.FC<Props> = ({ def, val, isPinned, onPinToggle }: Props) => {\n    const classes = useStyles()\n    const [isHovered, setHovered] = useState<boolean>(false)\n    const deftype = def.metric_type ? def.metric_type : IDS.indexOf(def.metric_key) > -1 ? 'id' : 'unknown'\n    const valstr = val === undefined ? ' ' : dataPrint(deftype, def.metric_key, def.format_string, val)\n    return (\n        <div\n            className={clsx(classes.root, { [classes.pinned]: isPinned, [classes.rootHover]: !isPinned && isHovered })}\n            onMouseOver={(): void => setHovered(true)}\n            onMouseOut={(): void => setHovered(false)}\n            onDoubleClick={(): void => onPinToggle(def.metric_key)}\n        >\n            <Tooltip\n                title={\n                    <div>\n                        <Typography variant=\"body1\">\n                            {def.metric_name}\n                            {def.units ? ` (${def.units})` : ''}\n                        </Typography>\n                        {def.description && <Typography variant=\"body2\">{def.description}</Typography>}\n                    </div>\n                }\n            >\n                <div\n                    className={clsx(classes.inner, {\n                        [classes.noval]: !isPinned && (val === undefined || val === null)\n                    })}\n                >\n                    <Typography variant=\"body1\" className={classes.name}>\n                        {def.metric_name}\n                    </Typography>\n                    {/* <Typography variant=\"overline\" color=\"primary\">\n                        {deftype}\n                    </Typography> */}\n                    <div className={classes.value}>\n                        <Typography\n                            variant={deftype === 'id' || val === undefined ? 'overline' : 'body2'}\n                            className={clsx({\n                                [classes.idVal]: val !== undefined && deftype === 'id',\n                                [classes.stringVal]: val !== undefined && deftype === 'string'\n                            })}\n                        >\n                            {valstr}\n                        </Typography>\n                    </div>\n                    <Typography variant=\"caption\" className={classes.unit}>\n                        {val === undefined ? '' : def.units}\n                    </Typography>\n                </div>\n            </Tooltip>\n\n            <Tooltip title={isPinned ? 'Unpin this metric' : 'Pin this metric'}>\n                <IconButton\n                    size=\"small\"\n                    className={clsx(classes.pinButton, { [classes.buttonHover]: isHovered })}\n                    onClick={(): void => onPinToggle(def.metric_key)}\n                    color=\"inherit\"\n                >\n                    {isPinned ? <CancelOutlinedIcon /> : <TurnedInNotSharpIcon />}\n                </IconButton>\n            </Tooltip>\n        </div>\n    )\n}\n\nexport default MetricRow\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useState, useRef, useEffect, useMemo, useCallback } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\n// import DialogContentText from '@material-ui/core/DialogContentText'\n// import DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport copy from 'clipboard-copy'\n// import Typography from '@material-ui/core/Typography'\n\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\n// import log from 'loglevel'\n\n// import { util } from '@northarrowresearch/common'\n\ninterface Props {\n    data: any\n    open: boolean\n    handleClose: () => void\n}\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            display: 'flex',\n            width: '100%',\n            overflow: 'hidden'\n        },\n        tabs: {},\n        dlgContent: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        codeContainer: {\n            padding: theme.spacing(1, 0.5),\n            minWidth: '60hw',\n            overflow: 'hidden'\n        },\n        code: {\n            color: '#cccccc',\n            background: '#444444'\n            // whiteSpace: 'pre-wrap'\n        },\n        inputText: {\n            padding: theme.spacing(1, 0.5),\n            fontFamily: 'Courier New,Courier,Lucida Sans Typewriter,Lucida Typewriter,monospace',\n            color: '#cccccc'\n        }\n    })\n)\n\nenum TabList {\n    JSON,\n    CSV\n}\n\nconst MetricRow: React.FC<Props> = ({ data, open, handleClose }: Props) => {\n    const classes = useStyles()\n    const inputRef = useRef<HTMLInputElement>()\n    const [tab, setTab] = useState<TabList>(TabList.JSON)\n    const [snack, setSnack] = useState<boolean>(false)\n\n    const renderText = useMemo(() => {\n        let text = ''\n        const reducedText = data.reduce(\n            (acc, grp) => ({\n                ...acc,\n                [grp.name]: grp.fields.reduce((acc, { def, val }) => ({ ...acc, [def.metric_name]: val }), {})\n            }),\n            {}\n        )\n        switch (tab) {\n            case TabList.JSON:\n                text = JSON.stringify(reducedText, null, 4)\n                break\n            default:\n                text = Object.keys(reducedText)\n                    .reduce(\n                        (acc, grpname) => [\n                            ...acc,\n                            ...Object.keys(reducedText[grpname]).map(\n                                (kname) =>\n                                    `${grpname},${kname},${\n                                        reducedText[grpname][kname] ? reducedText[grpname][kname] : ''\n                                    }`\n                            )\n                        ],\n                        ['Group,Name,Value']\n                    )\n                    .join('\\r\\n')\n                break\n        }\n        return text\n    }, [data, tab])\n\n    const handleFocus = useCallback((): void => {\n        if (open && inputRef.current) {\n            inputRef.current.select()\n        }\n    }, [open])\n\n    useEffect(() => {\n        if (!open) return\n        copy(renderText)\n        setSnack(true)\n    }, [open, renderText])\n\n    return (\n        <>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\" fullWidth>\n                <DialogContent className={classes.dlgContent}>\n                    <Tabs\n                        className={classes.tabs}\n                        value={tab}\n                        onChange={(event, newValue): void => setTab(newValue)}\n                        aria-label=\"Data selector tabs\"\n                    >\n                        <Tab label=\"JSON\" value={TabList.JSON} />\n                        <Tab label=\"CSV\" value={TabList.CSV} />\n                    </Tabs>\n\n                    <Box className={classes.codeContainer}>\n                        <TextField\n                            multiline\n                            fullWidth\n                            inputRef={inputRef}\n                            inputProps={{\n                                className: classes.inputText,\n                                readOnly: true,\n                                wrap: 'soft'\n                            }}\n                            className={classes.code}\n                            rows={10}\n                            onFocus={handleFocus}\n                            onSelect={handleFocus}\n                            onChange={handleFocus}\n                            onClick={(): void => {\n                                copy(renderText)\n                                setSnack(true)\n                            }}\n                            aria-label=\"maximum height\"\n                            placeholder=\"Maximum 4 rows\"\n                            value={renderText}\n                        />\n                    </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center'\n                }}\n                color=\"secondary\"\n                open={snack}\n                autoHideDuration={3000}\n                onClose={(): void => setSnack(false)}\n            >\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n                    {tab === TabList.JSON && 'JSON '}\n                    {tab === TabList.CSV && 'CSV '}\n                    Copied to clipboard\n                </MuiAlert>\n            </Snackbar>\n        </>\n    )\n}\n\nexport default MetricRow\n","import React from 'react'\nimport MuiAccordion from '@material-ui/core/Accordion'\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary'\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\n\nimport MetricRow from './MetricRow'\n\nimport { MetricPrefsType } from '../types'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\n// import log from 'loglevel'\n\ninterface Props {\n    groups: any[]\n    pinned: any[]\n    onPinToggle: (pinToggle: string) => void\n    onAccordionToggle: (gname: string) => void\n    metricPrefs: MetricPrefsType\n}\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            overflow: 'scroll'\n        },\n        accordion: {\n            border: '1px solid rgba(0, 0, 0, .125)',\n            boxShadow: 'none',\n            '&:not(:last-child)': {\n                borderBottom: 0\n            },\n            '&:before': {\n                display: 'none'\n            },\n            '&$expanded': {\n                margin: 'auto'\n            }\n        },\n        accordionExpanded: {},\n        summary: {\n            display: 'flex'\n        },\n        summaryExpanded: {\n            // '&$expanded': {\n            //     margin: '12px 0'\n            // }\n        },\n        summaryContent: {\n            '&$expanded': {\n                margin: '12px 0'\n            }\n        },\n        details: {\n            display: 'flex',\n            flexDirection: 'column',\n            padding: theme.spacing(1, 1, 1, 2)\n        },\n        fieldTitle: {\n            flexGrow: 1\n        },\n        fieldCount: {}\n    })\n)\n\nconst MetricAccordion: React.FC<Props> = ({ groups, pinned, onPinToggle, metricPrefs, onAccordionToggle }: Props) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            {pinned.map(({ def, val }, idp) => (\n                <MetricRow key={`mrow-pinned-${idp}`} def={def} val={val} isPinned onPinToggle={onPinToggle} />\n            ))}\n            {groups.map(({ name, fields }, idx) => (\n                <MuiAccordion\n                    key={`accordion-${idx}`}\n                    square\n                    classes={{\n                        root: classes.accordion,\n                        expanded: classes.accordionExpanded\n                    }}\n                    expanded={Boolean(metricPrefs.accordion && metricPrefs.accordion[name])}\n                    onChange={(): void => onAccordionToggle(name)}\n                >\n                    <MuiAccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        classes={{\n                            root: classes.summary,\n                            expanded: classes.summaryExpanded,\n                            content: classes.summaryContent\n                        }}\n                    >\n                        <Typography className={classes.fieldTitle}>{name}</Typography>\n                        <Typography className={classes.fieldCount} variant=\"caption\">\n                            {fields.reduce((acc, f) => {\n                                return f.val ? acc + 1 : acc\n                            }, 0)}\n                            /{fields.length}\n                        </Typography>\n                    </MuiAccordionSummary>\n                    <MuiAccordionDetails className={classes.details}>\n                        {fields\n                            .filter((f) => !metricPrefs.pinned || metricPrefs.pinned.indexOf(f.metric_key) === -1)\n                            .map(({ def, val }, idt) => (\n                                <MetricRow key={`mrow-${idx}-${idt}`} def={def} val={val} onPinToggle={onPinToggle} />\n                            ))}\n                    </MuiAccordionDetails>\n                </MuiAccordion>\n            ))}\n        </div>\n    )\n}\nexport default MetricAccordion\n","/* eslint-disable @typescript-eslint/camelcase */\nimport React, { useCallback, useState } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport MetricAccordion from './MetricAccordion'\nimport MetricModal from './MetricModal'\nimport { OfflineStateType, MetricPrefsType, FieldDef } from '../types'\nimport GetAppIcon from '@material-ui/icons/GetApp'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\nimport log from 'loglevel'\n\ninterface Props {\n    fieldDefs: FieldDef[]\n    loading: boolean\n    metrics?: any\n    nhdProps?: any\n    metricPrefs: MetricPrefsType\n    setOfflineState: (partialState: Partial<OfflineStateType>) => void\n}\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            height: '100%',\n            overflow: 'hidden',\n            '& *': {\n                userSelect: 'text'\n            },\n            display: 'flex',\n            flexDirection: 'column'\n        },\n        title: {\n            flexGrow: 1\n        }\n    })\n)\n\nconst MarkerFields: React.FC<Props> = ({\n    metrics,\n    loading,\n    nhdProps,\n    fieldDefs,\n    metricPrefs,\n    setOfflineState\n}: Props) => {\n    const classes = useStyles()\n    const [downloadDlg, setDownloadDlg] = useState<boolean>(false)\n\n    const handleAccordionToggle = useCallback(\n        (gname: string): void => {\n            const newAccordion = { ...metricPrefs.accordion }\n            setOfflineState({\n                metricPrefs: {\n                    ...metricPrefs,\n                    accordion: { ...newAccordion, [gname]: !Boolean(newAccordion[gname]) }\n                }\n            })\n        },\n        [metricPrefs, setOfflineState]\n    )\n\n    if (loading) return <Typography>Loading...</Typography>\n    log.debug('MarkerFields::', { metrics, loading, nhdProps, fieldDefs, metricPrefs })\n    const combinedMetrics = { ...metrics.catch_metrics, ...metrics.wing_metrics }\n    // const defLookup = fieldDefs.reduce((acc, fd) => ({ ...acc, [fd.metric_key]: fd }), {})\n    const groupNames = Array.from(new Set(fieldDefs.map((d) => d.group_name)))\n    const fieldKeys = Array.from(new Set(fieldDefs.map((d) => d.metric_key)))\n\n    // We filter out anything that's already pinned\n    const groups = groupNames.map((gname) => ({\n        name: gname,\n        fields: fieldDefs.map((def) => ({\n            def,\n            val: combinedMetrics === null ? null : combinedMetrics[def.metric_key]\n        }))\n    }))\n\n    // Sort names alphabetically\n    Object.keys(groups).forEach((gname) => {\n        groups[gname].fields.sort((a, b) => {\n            return a.def.metric_name.toLowerCase().localeCompare(b.def.metric_name.toLowerCase())\n        })\n    })\n\n    const handleTogglePin = (pinToggle: string): void => {\n        const isPinned = metricPrefs.pinned && metricPrefs.pinned.indexOf(pinToggle) > -1\n        const newPinned = metricPrefs.pinned || []\n        setOfflineState({\n            metricPrefs: {\n                ...metricPrefs,\n                pinned: isPinned ? newPinned.filter((p) => p !== pinToggle) : [...newPinned, pinToggle]\n            }\n        })\n    }\n    // For now push in any metrics we don't use and the nhd fields\n    // TODO: this needs to go away in production\n    groups.push({\n        name: 'Other',\n        fields: combinedMetrics\n            ? Object.keys(combinedMetrics)\n                  .filter((mname) => fieldKeys.indexOf(mname) === -1)\n                  .map((n) => nhdFieldMaker(n, nhdProps[n]))\n            : []\n    })\n    groups.push({\n        name: 'NHD Fields',\n        fields: Object.keys(nhdProps).map((n) => nhdFieldMaker(n, nhdProps[n]))\n    })\n\n    const pinned = metricPrefs.pinned\n        ? metricPrefs.pinned.map((pname) => ({\n              def: fieldDefs.find((fd) => fd.metric_key === pname) || nhdFieldMaker(pname, combinedMetrics[pname]).def,\n              val: combinedMetrics[pname] || nhdProps[pname]\n          }))\n        : []\n\n    const groupsFiltered = groups.map(({ name, fields }) => ({\n        name,\n        fields: fields.filter((fld) => metricPrefs.pinned.indexOf(fld.def.metric_key) === -1)\n    }))\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"subtitle1\" className={classes.title}>\n                        NHDPlusID: {nhdProps.nhdplusid}\n                    </Typography>\n                    <IconButton className={classes.dwnldBtn} color=\"inherit\" onClick={(): void => setDownloadDlg(true)}>\n                        <GetAppIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <MetricAccordion\n                groups={groupsFiltered}\n                pinned={pinned}\n                metricPrefs={metricPrefs}\n                onPinToggle={handleTogglePin}\n                onAccordionToggle={handleAccordionToggle}\n            />\n            <MetricModal data={groups} open={downloadDlg} handleClose={(): void => setDownloadDlg(false)} />\n        </div>\n    )\n}\n\nexport default MarkerFields\n\nconst NHDLookup = {\n    spheroid_dist: {\n        group_name: 'NHD Fields',\n        metric_key: 'spheroid_dist',\n        metric_type: 'float',\n        metric_name: 'Distance to Reach',\n        description: 'Distance from the point you clicked to the nearest point on the reach.',\n        units: 'm',\n        format_string: '0,0.0'\n    },\n    fcode: {\n        group_name: 'NHD Fields',\n        metric_key: 'fcode',\n        metric_type: 'id',\n        metric_name: 'FCode',\n        description: null,\n        units: null,\n        format_string: null\n    }\n}\n\nexport function nhdFieldMaker(name: string, val: any): any {\n    return NHDLookup[name]\n        ? { def: NHDLookup[name], val: val }\n        : {\n              def: {\n                  group_name: 'NHD Fields',\n                  metric_key: name,\n                  metric_name: name,\n                  description: null,\n                  units: null,\n                  format_string: null\n              },\n              val\n          }\n}\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    appFrame: {\n        height: '100%'\n    },\n    parentContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100%',\n        overflow: 'hidden'\n    },\n    mapContainer: {\n        overflow: 'hidden',\n        flex: '1 1 75%'\n    },\n    drawerContainer: {\n        flex: '0 0 25%',\n        wordWrap: 'break-word',\n        maxWidth: '25%'\n    }\n})\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport Topbar from './Topbar'\nimport Map from './Map'\nimport { OfflineStateType, EphemeralStateType } from './types'\nimport MetricView from './MetricView'\nimport style from './App.style'\nimport { Paper, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(style)\n\ninterface AppProps {\n    error?: string\n    offlineState: OfflineStateType\n    setOfflineState: (partialState: Partial<OfflineStateType>) => void\n    ephemeralState: EphemeralStateType\n    searchSubmit: (nhdid: number) => Promise<void>\n    handleMapClick: (e: any, MapboxObj: any) => void\n    signOut: () => void\n}\n\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst App: React.FC<AppProps> = ({\n    error,\n    offlineState,\n    setOfflineState,\n    ephemeralState,\n    handleMapClick,\n    searchSubmit,\n    signOut\n}: AppProps) => {\n    const classes = useStyles()\n\n    return (\n        <AppFrame\n            className={classes.appFrame}\n            topbar={<Topbar title={'Network Attributes'} searchSubmit={searchSubmit} signOut={signOut} />}\n            fullWidth\n            noScroll\n        >\n            <div className={classes.parentContainer}>\n                {error && (\n                    <Paper>\n                        <Typography color=\"error\" variant=\"body2\">\n                            {error}\n                        </Typography>\n                    </Paper>\n                )}\n                {!error && ephemeralState && ephemeralState.selectedReach && (\n                    <div id=\"drawer-container\" className={classes.drawerContainer}>\n                        <MetricView\n                            {...{\n                                loading: ephemeralState.selectedReach.loading,\n                                metrics: ephemeralState.selectedReach?.metrics,\n                                nhdProps: ephemeralState.selectedReach?.nhdProps,\n                                fieldDefs: ephemeralState.fieldDefs.defs || [],\n                                metricPrefs: offlineState.metricPrefs,\n                                setOfflineState\n                            }}\n                        />\n                    </div>\n                )}\n                {!error && (\n                    <div className={classes.mapContainer}>\n                        <Map\n                            {...{\n                                initialViewport: offlineState.viewport,\n                                vectorTiles: ephemeralState.vectorTileDefs.tiles,\n                                selectedReach: ephemeralState.selectedReach,\n                                handleMapClick\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        </AppFrame>\n    )\n}\n\nexport default App\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport useInitialState from './App.state'\nimport { useHosted } from '@northarrowresearch/react-auth'\nimport { api, graphql } from '@netatt/common'\nimport App from './App'\nimport log from 'loglevel'\nimport { endpoints, aws, isDev } from './config'\nimport { EphemeralStateType, OfflineStateType } from './types'\n\nconst defaultCurrentState = {\n    fieldDefs: { loading: true },\n    vectorTileDefs: { loading: true }\n}\n\nexport type StateRefType = {\n    ephemeral: EphemeralStateType\n    offline: OfflineStateType\n}\n\nconst AppConnect: React.FC = () => {\n    // This is the main loading. It needs the field defs AND the vector tiles to be considered false\n    const [loading, setLoading] = useState<boolean>(true)\n    const [error, setError] = useState<string>()\n    const [offlineState, setOfflineState] = useInitialState()\n    const [ephemeralState, setEphemeralState] = useState<EphemeralStateType>(defaultCurrentState)\n\n    const { isAuthenticated, getCurrentToken, signIn, signOut } = useHosted(aws, true, isDev)\n    // Below is here in case we need to turn authentication off for some reason\n    // const getCurrentToken = useCallback((): Promise<string> => Promise.resolve(''), [])\n    // const signOut = (): void => console.log('SIGN OUT)\n\n    // Store our state in a ref so we can access it without page reloads\n    const stateRef = useRef<StateRefType>()\n    stateRef.current = { offline: offlineState, ephemeral: ephemeralState }\n\n    // Recalculate the loading indicator for us\n    useEffect(() => {\n        const newLoading = !ephemeralState || ephemeralState.fieldDefs.loading || ephemeralState.vectorTileDefs.loading\n        if (newLoading !== loading) setLoading(newLoading)\n    }, [ephemeralState, loading])\n\n    const setPartialEphemeralState = useCallback(\n        (partial: Partial<EphemeralStateType>): void => {\n            setEphemeralState({\n                ...stateRef.current?.ephemeral,\n                ...partial\n            } as EphemeralStateType)\n        },\n        [setEphemeralState]\n    )\n\n    // Fetch our base layers\n    useEffect(() => {\n        // RS TILES CDN ==> /NET_ATT/BLM/NHDFlowline/metadata.json\n        if (!stateRef.current?.ephemeral.vectorTileDefs.loading) return\n        const tilepath = 'NET_ATT/BLM/NHDFlowline'\n        const url = `${process.env.REACT_APP_RS_TILES_CDN}/${tilepath}/metadata.json`\n        log.info('URL', url)\n\n        fetch(url)\n            .then((res) => res.json())\n            .then((d) => {\n                d.bounds = JSON.parse(`[${d.bounds}]`)\n                d.center = JSON.parse(`[${d.center}]`)\n                return {\n                    ...d,\n                    sourceName: 'NHDFlowline',\n                    url: `${process.env.REACT_APP_RS_TILES_CDN}/${tilepath}/{z}/{x}/{y}.pbf`,\n                    json: JSON.parse(d.json),\n                    zoom: 14,\n                    minZoom: parseInt(d.minzoom, 10),\n                    maxZoom: parseInt(d.maxzoom, 10),\n                    longitude: d.center[0],\n                    latitude: d.center[1]\n                }\n            })\n            .then((NHDFlowline) => {\n                log.debug('RESP', NHDFlowline)\n                setPartialEphemeralState({\n                    vectorTileDefs: { tiles: { NHDFlowline }, loading: false }\n                })\n            })\n            .catch((err) => {\n                log.error('DATA::fetch_tile::err:', err) // Print the error if one occurred\n                setError('Error fetching vector tile definitions')\n                setPartialEphemeralState({\n                    vectorTileDefs: { tiles: undefined, loading: false }\n                })\n            })\n    }, [setPartialEphemeralState])\n\n    useEffect(() => {\n        if (!isAuthenticated) return\n        getCurrentToken().then((jwt) =>\n            api\n                .apiCall(endpoints.graphql as string, jwt, graphql.queries.fieldDefs, {})\n                .then((response: any) => {\n                    if (response.data.fieldDefs) {\n                        setPartialEphemeralState({\n                            fieldDefs: { defs: JSON.parse(response.data.fieldDefs), loading: false }\n                        })\n                    }\n                })\n                .catch((err) => {\n                    log.error('DATA::fetch_tile::err:', err) // Print the error if one occurred\n                    setError('Error fetching field definitions')\n                    setPartialEphemeralState({\n                        fieldDefs: { defs: undefined, loading: false }\n                    })\n                })\n        )\n    }, [getCurrentToken, setPartialEphemeralState, isAuthenticated])\n\n    const handleGotRecord = useCallback(\n        (record: any): void => {\n            try {\n                log.debug('handleGotRecord:: Record', record)\n                const { cp_line_pt: cpLinePt, pt, ...nhdProps } = JSON.parse(record.nhdProps)\n                const metrics = record.metrics ? JSON.parse(record.metrics) : {}\n                log.debug('handleGotRecord:: Record data parsed', { cpLinePt, pt, nhdProps })\n                const newPt = cpLinePt ? JSON.parse(cpLinePt) : undefined\n\n                setPartialEphemeralState({\n                    selectedReach: {\n                        ...stateRef.current?.ephemeral.selectedReach,\n                        loading: false,\n                        intersect: newPt ? newPt.coordinates : undefined,\n                        catchGeo: record.catchGeom.bbox ? JSON.parse(record.catchGeom.geom) : undefined,\n                        catchBBox: record.catchGeom.bbox ? JSON.parse(record.catchGeom.bbox) : undefined,\n                        reachBBox: record.reachGeom.bbox ? JSON.parse(record.reachGeom.bbox) : undefined,\n                        metrics,\n                        nhdProps\n                    }\n                })\n            } catch (err) {\n                log.error('DATA::handleGotRecord::err:', { err, record }) // Print the error if one occurred\n                setError('Error parsing record from database')\n                setPartialEphemeralState({\n                    selectedReach: { ...stateRef.current?.ephemeral.selectedReach, loading: false }\n                })\n            }\n        },\n        [setPartialEphemeralState]\n    )\n\n    const handleMapClick = useCallback(\n        ({ lngLat }): Promise<void> => {\n            if (!isAuthenticated) return Promise.resolve()\n            setPartialEphemeralState({\n                selectedReach: {\n                    ...stateRef.current?.ephemeral.selectedReach,\n                    clickCoords: lngLat,\n                    loading: true,\n                    intersect: undefined\n                }\n            })\n            return getCurrentToken().then((jwt) =>\n                api\n                    .apiCall(endpoints.graphql as string, jwt, graphql.queries.geoRecord, { lngLat })\n                    .then((response: any) => handleGotRecord(response.data.geoRecord))\n            )\n        },\n        [getCurrentToken, setPartialEphemeralState, isAuthenticated, handleGotRecord]\n    )\n\n    const handleSearchSubmit = useCallback(\n        (nhdplusid: number): Promise<void> => {\n            if (!isAuthenticated) return Promise.resolve()\n            return getCurrentToken().then((jwt) =>\n                api\n                    .apiCall(endpoints.graphql as string, jwt, graphql.queries.record, { id: nhdplusid })\n                    .then((response: any) => {\n                        if (response.data.record) {\n                            return handleGotRecord(response.data.record)\n                        } else {\n                            throw new Error('response.data.record not found')\n                        }\n                    })\n                    .catch((err) => {\n                        log.error('DATA::handleSearchSubmit::err:', { err }) // Print the error if one occurred\n                        setError('Error retrieving record from database')\n                        setPartialEphemeralState({\n                            selectedReach: { ...stateRef.current?.ephemeral.selectedReach, loading: false }\n                        })\n                    })\n            )\n        },\n        [getCurrentToken, handleGotRecord, setPartialEphemeralState, isAuthenticated]\n    )\n    // Set up an initial search if we have one in the localstorage\n    useEffect(() => {\n        if (isAuthenticated && !stateRef.current?.ephemeral.selectedReach && offlineState.selectedReachId) {\n            handleSearchSubmit(offlineState.selectedReachId)\n        }\n    }, [offlineState, handleSearchSubmit, isAuthenticated])\n\n    if (!isAuthenticated)\n        return (\n            <div>\n                <button onClick={(): Promise<any> => signIn()}>Logged Out</button>\n            </div>\n        )\n\n    return (\n        <App\n            {...{\n                error,\n                offlineState,\n                setOfflineState,\n                ephemeralState,\n                handleMapClick,\n                searchSubmit: handleSearchSubmit,\n                signOut\n            }}\n        />\n    )\n}\nAppConnect.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n}\n\nexport default AppConnect\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL as string, window.location.href)\n      if (publicUrl.origin !== window.location.origin) {\n          // Our service worker won't work if PUBLIC_URL is on a different origin\n          // from what our page is served on. This might happen if a CDN is used to\n          // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n          return\n      }\n\n      window.addEventListener('load', () => {\n          const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n          if (isLocalhost) {\n              // This is running on localhost. Let's check if a service worker still exists or not.\n              checkValidServiceWorker(swUrl, config)\n\n              // Add some additional logging to localhost, pointing developers to the\n              // service worker/PWA documentation.\n              navigator.serviceWorker.ready.then(() => {\n                  console.log(\n                      'This web app is being served cache-first by a service ' +\n                          'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                  )\n              })\n          } else {\n              // Is not localhost. Just register service worker\n              registerValidSW(swUrl, config)\n          }\n      })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n          registration.onupdatefound = () => {\n              const installingWorker = registration.installing\n              if (installingWorker == null) {\n                  return\n              }\n              installingWorker.onstatechange = () => {\n                  if (installingWorker.state === 'installed') {\n                      if (navigator.serviceWorker.controller) {\n                          // At this point, the updated precached content has been fetched,\n                          // but the previous service worker will still serve the older\n                          // content until all client tabs are closed.\n                          console.log(\n                              'New content is available and will be used when all ' +\n                                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                          )\n\n                          // Execute callback\n                          if (config && config.onUpdate) {\n                              config.onUpdate(registration)\n                          }\n                      } else {\n                          // At this point, everything has been precached.\n                          // It's the perfect time to display a\n                          // \"Content is cached for offline use.\" message.\n                          console.log('Content is cached for offline use.')\n\n                          // Execute callback\n                          if (config && config.onSuccess) {\n                              config.onSuccess(registration)\n                          }\n                      }\n                  }\n              }\n          }\n      })\n      .catch((error) => {\n          console.error('Error during service worker registration:', error)\n      })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n  })\n      .then((response) => {\n          // Ensure service worker exists, and that we really are getting a JS file.\n          const contentType = response.headers.get('content-type')\n          if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n              // No service worker found. Probably a different app. Reload the page.\n              navigator.serviceWorker.ready.then((registration) => {\n                  registration.unregister().then(() => {\n                      window.location.reload()\n                  })\n              })\n          } else {\n              // Service worker found. Proceed as normal.\n              registerValidSW(swUrl, config)\n          }\n      })\n      .catch(() => {\n          console.log('No internet connection found. App is running in offline mode.')\n      })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n          .then((registration) => {\n              registration.unregister()\n          })\n          .catch((error) => {\n              console.error(error.message)\n          })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppContainer from './App.connect'\n// If we're gonna have charts we need this\nimport * as serviceWorker from './serviceWorker'\nimport {\n  HashRouter,\n  Route\n} from 'react-router-dom'\nimport { devSetup } from '@northarrowresearch/react-common'\nimport 'react-vis/dist/style.css'\nimport './index.css'\n\nrequire('typeface-roboto')\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// WE need the redux store first because our App needs its state\nReactDOM.render(\n  <HashRouter basename='/'>\n    <Route path='*' component={AppContainer} />\n  </HashRouter>\n  , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}